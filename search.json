[{"path":[]},{"path":"https://easystats.github.io/correlation/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://easystats.github.io/correlation/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://easystats.github.io/correlation/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://easystats.github.io/correlation/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://easystats.github.io/correlation/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement brenton@wiernik.org. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://easystats.github.io/correlation/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://easystats.github.io/correlation/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://easystats.github.io/correlation/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://easystats.github.io/correlation/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://easystats.github.io/correlation/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://easystats.github.io/correlation/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://easystats.github.io/correlation/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contribution Guidelines","title":"Contribution Guidelines","text":"easystats guidelines 0.1.0 people much welcome contribute code, documentation, testing suggestions. package aims beginner-friendly. Even ’re new open-source way life, new coding github stuff, encourage try submitting pull requests (PRs). “’d like help, ’m good enough programming yet” ’s alright, don’t worry! can always dig code, documentation tests. always typos fix, docs improve, details add, code lines document, tests add… Even smaller PRs appreciated. “’d like help, don’t know start” can look around issue section find features / ideas / bugs start working . can also open new issue just say ’re , interested helping . might ideas adapted skills. “’m sure suggestion idea worthwile” Enough impostor syndrom! suggestions opinions good, even ’s just thought , ’s always good receive feedback. “waste time ? get credit?” Software contributions getting valued academic world, good time collaborate us! Authors substantial contributions added within authors list. ’re also keen including eventual academic publications. Anyway, starting important! enter whole new world, new fantastic point view… fork repo, changes submit . work together make best :)","code":""},{"path":"https://easystats.github.io/correlation/CONTRIBUTING.html","id":"code","dir":"","previous_headings":"","what":"Code","title":"Contribution Guidelines","text":"Please document comment code, purpose step (code line) stated clear understandable way. submitting change, please read R style guide particular easystats convention code-style keep consistency code formatting. Regarding style guide, note exception: put readability clarity everything. Thus, like underscores full names (prefer model_performance modelperf interpret_odds_logistic intoddslog). start code, make sure ’re dev branch (“advanced”). , can create new branch named feature (e.g., feature_lightsaber) changes. Finally, submit branch merged dev branch. , every now , dev branch merge main, new package version.","code":""},{"path":"https://easystats.github.io/correlation/CONTRIBUTING.html","id":"checks-to-do-before-submission","dir":"","previous_headings":"","what":"Checks to do before submission","title":"Contribution Guidelines","text":"Make sure documentation (roxygen) good Make sure add tests new functions Run: styler::style_pkg(): Automatic style formatting lintr::lint_package(): Style checks devtools::check(): General checks","code":""},{"path":"https://easystats.github.io/correlation/CONTRIBUTING.html","id":"useful-materials","dir":"","previous_headings":"","what":"Useful Materials","title":"Contribution Guidelines","text":"Understanding GitHub flow","code":""},{"path":"https://easystats.github.io/correlation/articles/multilevel.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Multilevel Correlations","text":"Imagine experiment 10 individuals completed task 100 trials. 1000 trials (10 * 100) total, measured two things, V1 V2, interested investigating link two variables. generate data using simulate_simpson() function package look summary: Now let’s visualize two variables:  seems pretty straightforward! seems like negative correlation V1 V2. Let’s test .","code":"library(correlation)  data <- simulate_simpson(n = 100, groups = 10)  summary(data) ##        V1             V2           Group           ##  Min.   :-2.3   Min.   :-12.1   Length:1000        ##  1st Qu.: 3.0   1st Qu.: -8.0   Class :character   ##  Median : 5.5   Median : -5.5   Mode  :character   ##  Mean   : 5.5   Mean   : -5.5                      ##  3rd Qu.: 8.1   3rd Qu.: -3.0                      ##  Max.   :12.0   Max.   :  1.2 library(ggplot2)  ggplot(data, aes(x = V1, y = V2)) +   geom_point() +   geom_smooth(colour = \"black\", method = \"lm\", se = FALSE) +   theme_classic() ## `geom_smooth()` using formula 'y ~ x'"},{"path":"https://easystats.github.io/correlation/articles/multilevel.html","id":"simple-correlation","dir":"Articles","previous_headings":"","what":"Simple correlation","title":"Multilevel Correlations","text":"Indeed, strong, negative significant correlation V1 V2. Great, can go ahead publish results PNAS?","code":"correlation(data) ## # Correlation Matrix (pearson-method) ##  ## Parameter1 | Parameter2 |     r |         95% CI | t(998) |         p ## --------------------------------------------------------------------- ## V1         |         V2 | -0.84 | [-0.86, -0.82] | -48.77 | < .001*** ##  ## p-value adjustment method: Holm (1979) ## Observations: 1000"},{"path":"https://easystats.github.io/correlation/articles/multilevel.html","id":"the-simpsons-paradox","dir":"Articles","previous_headings":"","what":"The Simpson’s Paradox","title":"Multilevel Correlations","text":"fast! Ever heard Simpson’s Paradox? Let’s colour datapoints group (individuals):  Mmh, interesting. seems like, subject, relationship different. (global) negative trend seems artifact differences groups spurious! Multilevel (multi-group)  correlations allow us account differences groups. based partialization group, entered random effect mixed linear regression. can compute correlations package setting multilevel argument TRUE. completeness, let’s also see Bayesian cousin agrees : Dayum! hasty conclusions! Taking group account seems super important. Note: simple case two variables interest, course best directly proceed using mixed regression model instead correlations. said, latter can useful exploratory analysis, multiple variables interest, combination network structural approach.","code":"library(ggplot2)  ggplot(data, aes(x = V1, y = V2)) +   geom_point(aes(colour = Group)) +   geom_smooth(aes(colour = Group), method = \"lm\", se = FALSE) +   geom_smooth(colour = \"black\", method = \"lm\", se = FALSE) +   theme_classic() ## `geom_smooth()` using formula 'y ~ x' ## `geom_smooth()` using formula 'y ~ x' correlation(data, multilevel = TRUE) ## Parameter1 | Parameter2 |    r |           CI | t(998) |         p ## ------------------------------------------------------------------ ## V1         |         V2 | 0.50 | [0.45, 0.55] |  18.24 | < .001*** ##  ## Observations: 1000 correlation(data, multilevel = TRUE, bayesian = TRUE) ## Parameter1 | Parameter2 |    r |           CI | t(998) |         p ## ------------------------------------------------------------------ ## V1         |         V2 | 0.50 | [0.45, 0.54] |  18.15 | < .001*** ##  ## Observations: 1000"},{"path":"https://easystats.github.io/correlation/articles/types.html","id":"different-methods-for-correlations","dir":"Articles","previous_headings":"","what":"Different Methods for Correlations","title":"Correlation Types","text":"Correlations tests arguably one commonly used statistical procedures, used basis many applications exploratory data analysis, structural modeling, data engineering, etc. context, present correlation, toolbox R language (R Core Team 2019) part easystats collection, focused correlation analysis. goal lightweight, easy use, allows computation many different kinds correlations, : Pearson’s correlation: common correlation method. corresponds covariance two variables normalized (.e., divided) product standard deviations. \\[r_{xy} = \\frac{cov(x,y)}{SD_x \\times SD_y}\\] Spearman’s rank correlation: non-parametric measure correlation, Spearman correlation two variables equal Pearson correlation rank scores two variables; Pearson’s correlation assesses linear relationships, Spearman’s correlation assesses monotonic relationships (whether linear ). Confidence Intervals (CI) Spearman’s correlations computed using Fieller, Hartley, Pearson (1957) correction (see Bishara Hittner 2017). \\[r_{s_{xy}} = \\frac{cov(rank_x, rank_y)}{SD(rank_x) \\times SD(rank_y)}\\] Kendall’s rank correlation: normal case, Kendall correlation preferred Spearman correlation smaller gross error sensitivity (GES) smaller asymptotic variance (AV), making robust efficient. However, interpretation Kendall’s tau less direct compared Spearman’s rho, sense quantifies difference % concordant discordant pairs among possible pairwise events. Confidence Intervals (CI) Kendall’s correlations computed using Fieller, Hartley, Pearson (1957) correction (see Bishara Hittner 2017). pair observations (,j) two variables (x, y), defined follows: \\[\\tau_{xy} = \\frac{2}{n(n-1)}\\sum_{<j}^{}sign(x_i - x_j) \\times sign(y_i - y_j)\\] Biweight midcorrelation: measure similarity median-based, instead traditional mean-based, thus less sensitive outliers. can used robust alternative similarity metrics, Pearson correlation (Langfelder Horvath 2012). Distance correlation: Distance correlation measures linear non-linear association two random variables random vectors (, see Székely, Rizzo, Bakirov (2007), Székely Rizzo (2009)). contrast Pearson’s correlation, can detect linear association two random variables. Percentage bend correlation: Introduced Wilcox (1994), based -weight specified percentage marginal observations deviating median (default, 20 percent). Shepherd’s Pi correlation: Equivalent Spearman’s rank correlation outliers removal (means bootstrapped Mahalanobis distance). Blomqvist’s coefficient: Blomqvist’s coefficient (also referred Blomqvist’s Beta medial correlation; Blomqvist, 1950) median-based non-parametric correlation advantages measures Spearman’s Kendall’s estimates (see Shmid Schimdt, 2006). Hoeffding’s D: Hoeffding’s D statistic non-parametric rank based measure association detects general departures independence (Hoeffding 1948), including non-linear associations. Hoeffding’s D varies -0.5 1 (tied ranks, otherwise can lower values), larger values indicating stronger relationship variables. Gamma correlation: Goodman-Kruskal gamma statistic similar Kendall’s Tau coefficient. relatively robust outliers deals well data many ties. Gaussian rank correlation: Gaussian rank correlation estimator simple well-performing alternative robust rank correlations (Boudt et al., 2012). based Gaussian quantiles ranks. Point-Biserial biserial correlation: Correlation coefficient used one variable continuous dichotomous (binary). Point-Biserial equivalent Pearson’s correlation, Biserial used binary variable assumed underlying continuity. example, anxiety level can measured continuous scale, can classified dichotomously high/low. Winsorized correlation: Correlation variables Winsorized, .e., transformed limiting extreme values reduce effect possibly spurious outliers. Polychoric correlation: Correlation two theorised normally distributed continuous latent variables, two observed ordinal variables. Tetrachoric correlation: Special case polychoric correlation applicable observed variables dichotomous. Partial correlation: Correlation two variables adjusting (linear) effect one variables. correlation test run partialized dataset, independently . words, considers partialization independent step generating different dataset, rather belonging model. discrepancies expected t- p-values (correlation coefficient) compared implementations ppcor. Let \\(e_{x.z}\\) residuals linear prediction \\(x\\) \\(z\\) (note can expanded multivariate \\(z\\)): \\[r_{xy.z} = r_{e_{x.z},e_{y.z}}\\] Multilevel correlation: Multilevel correlations special case partial correlations variable adjusted factor included random effect mixed-effects model.","code":""},{"path":"https://easystats.github.io/correlation/articles/types.html","id":"comparison","dir":"Articles","previous_headings":"","what":"Comparison","title":"Correlation Types","text":"fit different types correlations generated data different link strengths link types. Let’s first load required libraries analysis.","code":"library(correlation) library(bayestestR) library(see) library(ggplot2) library(datawizard) library(poorman)"},{"path":"https://easystats.github.io/correlation/articles/types.html","id":"utility-functions","dir":"Articles","previous_headings":"Comparison","what":"Utility functions","title":"Correlation Types","text":"","code":"generate_results <- function(r, n = 100, transformation = \"none\") {   data <- bayestestR::simulate_correlation(round(n), r = r)    if (transformation != \"none\") {     var <- ifelse(grepl(\"(\", transformation, fixed = TRUE), \"data$V2)\", \"data$V2\")     transformation <- paste0(transformation, var)     data$V2 <- eval(parse(text = transformation))   }    out <- data.frame(n = n, transformation = transformation, r = r)    out$Pearson <- cor_test(data, \"V1\", \"V2\", method = \"pearson\")$r   out$Spearman <- cor_test(data, \"V1\", \"V2\", method = \"spearman\")$rho   out$Kendall <- cor_test(data, \"V1\", \"V2\", method = \"kendall\")$tau   out$Biweight <- cor_test(data, \"V1\", \"V2\", method = \"biweight\")$r   out$Distance <- cor_test(data, \"V1\", \"V2\", method = \"distance\")$r   out$Distance <- cor_test(data, \"V1\", \"V2\", method = \"distance\")$r    out }"},{"path":"https://easystats.github.io/correlation/articles/types.html","id":"effect-of-relationship-type","dir":"Articles","previous_headings":"Comparison","what":"Effect of Relationship Type","title":"Correlation Types","text":"can see, distance correlation able capture strength even severely non-linear relationships.","code":"data <- data.frame() for (r in seq(0, 0.999, length.out = 200)) {   for (n in c(100)) {     for (transformation in c(       \"none\",       \"exp(\",       \"log10(1+max(abs(data$V2))+\",       \"1/\",       \"tan(\",       \"sin(\",       \"cos(\",       \"cos(2*\",       \"abs(\",       \"data$V2*\",       \"data$V2*data$V2*\",       \"ifelse(data$V2>0, 1, 0)*(\"     )) {       data <- rbind(data, generate_results(r, n, transformation = transformation))     }   } }  data %>%   datawizard::reshape_longer(     select = -c(\"n\", \"r\", \"transformation\"),     names_to = \"Type\",     values_to = \"Estimation\"   ) %>%   mutate(Type = relevel(as.factor(Type), \"Pearson\", \"Spearman\", \"Kendall\", \"Biweight\", \"Distance\")) %>%   ggplot(aes(x = r, y = Estimation, fill = Type)) +   geom_smooth(aes(color = Type), method = \"loess\", alpha = 0) +   geom_vline(aes(xintercept = 0.5), linetype = \"dashed\") +   geom_hline(aes(yintercept = 0.5), linetype = \"dashed\") +   guides(colour = guide_legend(override.aes = list(alpha = 1))) +   see::theme_modern() +   scale_color_flat_d(palette = \"rainbow\") +   scale_fill_flat_d(palette = \"rainbow\") +   guides(colour = guide_legend(override.aes = list(alpha = 1))) +   facet_wrap(~transformation) model <- data %>%   datawizard::reshape_longer(     select = -c(\"n\", \"r\", \"transformation\"),     names_to = \"Type\",     values_to = \"Estimation\"   ) %>%   lm(r ~ Type / Estimation, data = .) %>%   parameters::parameters()  arrange(model[6:10, ], desc(Coefficient)) > Parameter                    | Coefficient |   SE |       95% CI | t(11903) |      p > ------------------------------------------------------------------------------------ > Type [Distance] * Estimation |        0.90 | 0.02 | [0.86, 0.95] |    40.14 | < .001 > Type [Kendall] * Estimation  |        0.66 | 0.02 | [0.62, 0.70] |    32.07 | < .001 > Type [Biweight] * Estimation |        0.53 | 0.02 | [0.50, 0.57] |    29.24 | < .001 > Type [Spearman] * Estimation |        0.51 | 0.02 | [0.48, 0.54] |    31.70 | < .001 > Type [Pearson] * Estimation  |        0.44 | 0.02 | [0.41, 0.47] |    26.49 | < .001"},{"path":[]},{"path":"https://easystats.github.io/correlation/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Dominique Makowski. Author, inventor.            @Dom_Makowski Brenton M. Wiernik. Author, maintainer.            @bmwiernik Indrajeet Patil. Author.            @patilindrajeets Daniel Lüdecke. Author.            @strengejacke Mattan S. Ben-Shachar. Author.            @mattansb Mark White. Reviewer. Maximilian M. Rabe. Reviewer.","code":""},{"path":"https://easystats.github.io/correlation/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Makowski, D., Ben-Shachar, M. S., Patil, ., & Lüdecke, D. (2019). Methods Algorithms Correlation Analysis R. Journal Open Source Software, 5(51), 2306. doi:10.21105/joss.02306","code":"@Article{,   title = {Methods and Algorithms for Correlation Analysis in R.},   author = {Dominique Makowski and Mattan S. Ben-Shachar and Indrajeet Patil and Daniel Lüdecke},   doi = {10.21105/joss.02306},   year = {2020},   journal = {Journal of Open Source Software},   number = {51},   volume = {5},   pages = {2306},   url = {https://joss.theoj.org/papers/10.21105/joss.02306}, }"},{"path":"https://easystats.github.io/correlation/index.html","id":"correlation-","dir":"","previous_headings":"","what":"Methods for Correlation Analysis","title":"Methods for Correlation Analysis","text":"correlation easystats package focused correlation analysis. ’s lightweight, easy use, allows computation many different kinds correlations, partial correlations, Bayesian correlations, multilevel correlations, polychoric correlations, biweight, percentage bend Sheperd’s Pi correlations (types robust correlation), distance correlation (type non-linear correlation) , also allowing combinations (instance, Bayesian partial multilevel correlation).","code":""},{"path":"https://easystats.github.io/correlation/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Methods for Correlation Analysis","text":"can reference package documentation follows: Makowski, D., Ben-Shachar, M. S., Patil, ., & Lüdecke, D. (2019). Methods Algorithms Correlation Analysis R. Journal Open Source Software, 5(51), 2306. https://doi.org/10.21105/joss.02306","code":""},{"path":"https://easystats.github.io/correlation/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Methods for Correlation Analysis","text":"correlation package available CRAN, latest development version available R-universe (rOpenSci). downloaded package, can load using:","code":"library(\"correlation\")"},{"path":"https://easystats.github.io/correlation/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Methods for Correlation Analysis","text":"Click buttons access package documentation easystats blog, check-vignettes: Types Correlation Multilevel Correlations","code":""},{"path":"https://easystats.github.io/correlation/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"Methods for Correlation Analysis","text":"correlation package can compute many different types correlation, including: ✅ Pearson’s correlation ✅ Spearman’s rank correlation ✅ Kendall’s rank correlation ✅ Biweight midcorrelation ✅ Distance correlation ✅ Percentage bend correlation ✅ Shepherd’s Pi correlation ✅ Blomqvist’s coefficient ✅ Hoeffding’s D ✅ Gamma correlation ✅ Gaussian rank correlation ✅ Point-Biserial biserial correlation ✅ Winsorized correlation ✅ Polychoric correlation ✅ Tetrachoric correlation ✅ Multilevel correlation overview description correlations types available . Moreover, many correlation types available partial within Bayesian framework.","code":""},{"path":"https://easystats.github.io/correlation/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Methods for Correlation Analysis","text":"main function correlation(), builds top cor_test() comes number possible options.","code":""},{"path":"https://easystats.github.io/correlation/index.html","id":"correlation-details-and-matrix","dir":"","previous_headings":"","what":"Correlation details and matrix","title":"Methods for Correlation Analysis","text":"output square matrix, (tidy) dataframe correlations tests per row. One can also obtain matrix using: Note one can also obtain full, square redundant matrix using:","code":"results <- correlation(iris) results ## # Correlation Matrix (pearson-method) ##  ## Parameter1   |   Parameter2 |     r |         95% CI | t(148) |         p ## ------------------------------------------------------------------------- ## Sepal.Length |  Sepal.Width | -0.12 | [-0.27,  0.04] |  -1.44 | 0.152     ## Sepal.Length | Petal.Length |  0.87 | [ 0.83,  0.91] |  21.65 | < .001*** ## Sepal.Length |  Petal.Width |  0.82 | [ 0.76,  0.86] |  17.30 | < .001*** ## Sepal.Width  | Petal.Length | -0.43 | [-0.55, -0.29] |  -5.77 | < .001*** ## Sepal.Width  |  Petal.Width | -0.37 | [-0.50, -0.22] |  -4.79 | < .001*** ## Petal.Length |  Petal.Width |  0.96 | [ 0.95,  0.97] |  43.39 | < .001*** ##  ## p-value adjustment method: Holm (1979) ## Observations: 150 summary(results) ## # Correlation Matrix (pearson-method) ##  ## Parameter    | Petal.Width | Petal.Length | Sepal.Width ## ------------------------------------------------------- ## Sepal.Length |     0.82*** |      0.87*** |       -0.12 ## Sepal.Width  |    -0.37*** |     -0.43*** |             ## Petal.Length |     0.96*** |              |             ##  ## p-value adjustment method: Holm (1979) summary(results, redundant = TRUE) ## # Correlation Matrix (pearson-method) ##  ## Parameter    | Sepal.Length | Sepal.Width | Petal.Length | Petal.Width ## ---------------------------------------------------------------------- ## Sepal.Length |              |       -0.12 |      0.87*** |     0.82*** ## Sepal.Width  |        -0.12 |             |     -0.43*** |    -0.37*** ## Petal.Length |      0.87*** |    -0.43*** |              |     0.96*** ## Petal.Width  |      0.82*** |    -0.37*** |      0.96*** |             ##  ## p-value adjustment method: Holm (1979) library(see)  results %>%   summary(redundant = TRUE) %>%   plot()"},{"path":"https://easystats.github.io/correlation/index.html","id":"correlation-tests","dir":"","previous_headings":"","what":"Correlation tests","title":"Methods for Correlation Analysis","text":"cor_test() function, pairwise correlations, also convenient making quick scatter plots.","code":"plot(cor_test(iris, \"Sepal.Width\", \"Sepal.Length\"))"},{"path":"https://easystats.github.io/correlation/index.html","id":"grouped-dataframes","dir":"","previous_headings":"","what":"Grouped dataframes","title":"Methods for Correlation Analysis","text":"correlation() function also supports stratified correlations, within tidyverse workflow!","code":"iris %>%   select(Species, Sepal.Length, Sepal.Width, Petal.Width) %>%   group_by(Species) %>%   correlation() ## # Correlation Matrix (pearson-method) ##  ## Group      |   Parameter1 |  Parameter2 |    r |        95% CI | t(48) |         p ## ---------------------------------------------------------------------------------- ## setosa     | Sepal.Length | Sepal.Width | 0.74 | [ 0.59, 0.85] |  7.68 | < .001*** ## setosa     | Sepal.Length | Petal.Width | 0.28 | [ 0.00, 0.52] |  2.01 | 0.101     ## setosa     |  Sepal.Width | Petal.Width | 0.23 | [-0.05, 0.48] |  1.66 | 0.104     ## versicolor | Sepal.Length | Sepal.Width | 0.53 | [ 0.29, 0.70] |  4.28 | < .001*** ## versicolor | Sepal.Length | Petal.Width | 0.55 | [ 0.32, 0.72] |  4.52 | < .001*** ## versicolor |  Sepal.Width | Petal.Width | 0.66 | [ 0.47, 0.80] |  6.15 | < .001*** ## virginica  | Sepal.Length | Sepal.Width | 0.46 | [ 0.20, 0.65] |  3.56 | 0.002**   ## virginica  | Sepal.Length | Petal.Width | 0.28 | [ 0.00, 0.52] |  2.03 | 0.048*    ## virginica  |  Sepal.Width | Petal.Width | 0.54 | [ 0.31, 0.71] |  4.42 | < .001*** ##  ## p-value adjustment method: Holm (1979) ## Observations: 50"},{"path":"https://easystats.github.io/correlation/index.html","id":"bayesian-correlations","dir":"","previous_headings":"","what":"Bayesian Correlations","title":"Methods for Correlation Analysis","text":"easy switch Bayesian framework.","code":"correlation(iris, bayesian = TRUE) ## # Correlation Matrix (pearson-method) ##  ## Parameter1   |   Parameter2 |   rho |         95% CI |      pd | % in ROPE |         Prior |          BF ## -------------------------------------------------------------------------------------------------------- ## Sepal.Length |  Sepal.Width | -0.11 | [-0.26,  0.04] |  91.85% |    43.92% | Beta (3 +- 3) |       0.509 ## Sepal.Length | Petal.Length |  0.86 | [ 0.82,  0.90] | 100%*** |        0% | Beta (3 +- 3) | 2.14e+43*** ## Sepal.Length |  Petal.Width |  0.81 | [ 0.74,  0.86] | 100%*** |        0% | Beta (3 +- 3) | 2.62e+33*** ## Sepal.Width  | Petal.Length | -0.41 | [-0.54, -0.28] | 100%*** |        0% | Beta (3 +- 3) | 3.49e+05*** ## Sepal.Width  |  Petal.Width | -0.35 | [-0.49, -0.22] | 100%*** |     0.12% | Beta (3 +- 3) | 5.29e+03*** ## Petal.Length |  Petal.Width |  0.96 | [ 0.95,  0.97] | 100%*** |        0% | Beta (3 +- 3) | 1.24e+80*** ##  ## Observations: 150"},{"path":"https://easystats.github.io/correlation/index.html","id":"tetrachoric-polychoric-biserial-biweight","dir":"","previous_headings":"","what":"Tetrachoric, Polychoric, Biserial, Biweight…","title":"Methods for Correlation Analysis","text":"correlation package also supports different types methods, can deal correlations factors!","code":"correlation(iris, include_factors = TRUE, method = \"auto\") ## # Correlation Matrix (auto-method) ##  ## Parameter1         |         Parameter2 |     r |         95% CI | t(148) |         p ## ------------------------------------------------------------------------------------- ## Sepal.Length       |        Sepal.Width | -0.12 | [-0.27,  0.04] |  -1.44 | 0.452     ## Sepal.Length       |       Petal.Length |  0.87 | [ 0.83,  0.91] |  21.65 | < .001*** ## Sepal.Length       |        Petal.Width |  0.82 | [ 0.76,  0.86] |  17.30 | < .001*** ## Sepal.Length       |     Species.setosa | -0.72 | [-0.79, -0.63] | -12.53 | < .001*** ## Sepal.Length       | Species.versicolor |  0.08 | [-0.08,  0.24] |   0.97 | 0.452     ## Sepal.Length       |  Species.virginica |  0.64 | [ 0.53,  0.72] |  10.08 | < .001*** ## Sepal.Width        |       Petal.Length | -0.43 | [-0.55, -0.29] |  -5.77 | < .001*** ## Sepal.Width        |        Petal.Width | -0.37 | [-0.50, -0.22] |  -4.79 | < .001*** ## Sepal.Width        |     Species.setosa |  0.60 | [ 0.49,  0.70] |   9.20 | < .001*** ## Sepal.Width        | Species.versicolor | -0.47 | [-0.58, -0.33] |  -6.44 | < .001*** ## Sepal.Width        |  Species.virginica | -0.14 | [-0.29,  0.03] |  -1.67 | 0.392     ## Petal.Length       |        Petal.Width |  0.96 | [ 0.95,  0.97] |  43.39 | < .001*** ## Petal.Length       |     Species.setosa | -0.92 | [-0.94, -0.89] | -29.13 | < .001*** ## Petal.Length       | Species.versicolor |  0.20 | [ 0.04,  0.35] |   2.51 | 0.066     ## Petal.Length       |  Species.virginica |  0.72 | [ 0.63,  0.79] |  12.66 | < .001*** ## Petal.Width        |     Species.setosa | -0.89 | [-0.92, -0.85] | -23.41 | < .001*** ## Petal.Width        | Species.versicolor |  0.12 | [-0.04,  0.27] |   1.44 | 0.452     ## Petal.Width        |  Species.virginica |  0.77 | [ 0.69,  0.83] |  14.66 | < .001*** ## Species.setosa     | Species.versicolor | -0.88 | [-0.91, -0.84] | -22.43 | < .001*** ## Species.setosa     |  Species.virginica | -0.88 | [-0.91, -0.84] | -22.43 | < .001*** ## Species.versicolor |  Species.virginica | -0.88 | [-0.91, -0.84] | -22.43 | < .001*** ##  ## p-value adjustment method: Holm (1979) ## Observations: 150"},{"path":"https://easystats.github.io/correlation/index.html","id":"partial-correlations","dir":"","previous_headings":"","what":"Partial Correlations","title":"Methods for Correlation Analysis","text":"also supports partial correlations (well Bayesian partial correlations).","code":"iris %>%   correlation(partial = TRUE) %>%   summary() ## # Correlation Matrix (pearson-method) ##  ## Parameter    | Petal.Width | Petal.Length | Sepal.Width ## ------------------------------------------------------- ## Sepal.Length |    -0.34*** |      0.72*** |     0.63*** ## Sepal.Width  |     0.35*** |     -0.62*** |             ## Petal.Length |     0.87*** |              |             ##  ## p-value adjustment method: Holm (1979)"},{"path":"https://easystats.github.io/correlation/index.html","id":"gaussian-graphical-models-ggms","dir":"","previous_headings":"","what":"Gaussian Graphical Models (GGMs)","title":"Methods for Correlation Analysis","text":"partial correlations can also represented Gaussian Graphical Models (GGM), increasingly popular tool psychology. GGM traditionally include set variables depicted circles (“nodes”), set lines visualize relationships , thickness represents strength association (see Bhushan et al., 2019).","code":"library(see) # for plotting library(ggraph) # needs to be loaded  mtcars %>%   correlation(partial = TRUE) %>%   plot()"},{"path":"https://easystats.github.io/correlation/index.html","id":"multilevel-correlations","dir":"","previous_headings":"","what":"Multilevel Correlations","title":"Methods for Correlation Analysis","text":"also provide cutting-edge methods, Multilevel (partial) correlations. partial correlations based linear mixed-effects models include factors random effects. can see correlations adjusted group (hierarchical) variability. However, partial argument set FALSE, try convert partial coefficient regular ones.can converted back full correlations:","code":"iris %>%   correlation(partial = TRUE, multilevel = TRUE) %>%   summary() ## # Correlation Matrix (pearson-method) ##  ## Parameter    | Petal.Width | Petal.Length | Sepal.Width ## ------------------------------------------------------- ## Sepal.Length |      -0.17* |      0.71*** |     0.43*** ## Sepal.Width  |     0.39*** |       -0.18* |             ## Petal.Length |     0.38*** |              |             ##  ## p-value adjustment method: Holm (1979) iris %>%   correlation(partial = FALSE, multilevel = TRUE) %>%   summary() ## Parameter    | Petal.Width | Petal.Length | Sepal.Width ## ------------------------------------------------------- ## Sepal.Length |     0.36*** |      0.76*** |     0.53*** ## Sepal.Width  |     0.47*** |      0.38*** |             ## Petal.Length |     0.48*** |              |"},{"path":"https://easystats.github.io/correlation/index.html","id":"contributing-and-support","dir":"","previous_headings":"","what":"Contributing and Support","title":"Methods for Correlation Analysis","text":"case want file issue contribute another way package, please follow guide. questions functionality, may either contact us via email also file issue.","code":""},{"path":"https://easystats.github.io/correlation/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Methods for Correlation Analysis","text":"Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://easystats.github.io/correlation/reference/cor_lower.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the upper or lower triangular part — cor_lower","title":"Return the upper or lower triangular part — cor_lower","text":"Return upper lower triangular part correlation matrix.","code":""},{"path":"https://easystats.github.io/correlation/reference/cor_lower.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the upper or lower triangular part — cor_lower","text":"","code":"cor_lower(x, diag = FALSE, ...)"},{"path":"https://easystats.github.io/correlation/reference/cor_lower.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the upper or lower triangular part — cor_lower","text":"x correlation object. diag diagonal included? ... arguments passed functions.","code":""},{"path":"https://easystats.github.io/correlation/reference/cor_lower.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return the upper or lower triangular part — cor_lower","text":"","code":"x <- correlation(mtcars, redundant = TRUE) # Generate full matrix x <- cor_lower(x)  if (require(\"ggplot2\")) {   ggplot(x, aes(x = Parameter2, y = Parameter1, fill = r)) +     geom_tile() } #> Loading required package: ggplot2   # Sorted x <- correlation(mtcars, redundant = TRUE) # Generate full matrix x <- cor_sort(x) x <- cor_lower(x)  if (require(\"ggplot2\")) {   ggplot(x, aes(x = Parameter2, y = Parameter1, fill = r)) +     geom_tile() }"},{"path":"https://easystats.github.io/correlation/reference/cor_smooth.html","id":null,"dir":"Reference","previous_headings":"","what":"Smooth a non-positive definite correlation matrix to make it positive definite — cor_smooth","title":"Smooth a non-positive definite correlation matrix to make it positive definite — cor_smooth","text":"Make correlations positive definite using psych::cor.smooth. smoothing done, inferential statistics (p-values, confidence intervals, etc.) removed, longer valid.","code":""},{"path":"https://easystats.github.io/correlation/reference/cor_smooth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Smooth a non-positive definite correlation matrix to make it positive definite — cor_smooth","text":"","code":"cor_smooth(x, method = \"psych\", verbose = TRUE, ...)  is.positive_definite(x, tol = 10^-12, ...)  is_positive_definite(x, tol = 10^-12, ...)"},{"path":"https://easystats.github.io/correlation/reference/cor_smooth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Smooth a non-positive definite correlation matrix to make it positive definite — cor_smooth","text":"x correlation matrix. method Smoothing method. Can psych (use psych::cor.smooth()), hj (Jorjani et al., 2003) lrs (Schaeffer, 2014). two last, use mbend::bend() (check documentation details). verbose Set FALSE silence function. ... arguments passed functions. tol minimum eigenvalue considered acceptable.","code":""},{"path":"https://easystats.github.io/correlation/reference/cor_smooth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Smooth a non-positive definite correlation matrix to make it positive definite — cor_smooth","text":"","code":"set.seed(123) data <- as.matrix(mtcars) # Make missing data so pairwise correlation matrix is non-positive definite data[sample(seq_len(352), size = 60)] <- NA data <- as.data.frame(data) x <- correlation(data) is.positive_definite(x) #> [1] FALSE  smoothed <- cor_smooth(x) #> mpg - cyl: -0.85 -> -0.82 #>  #> mpg - disp: no change (-0.82) #>  #> mpg - hp: no change (-0.76) #>  #> mpg - drat: no change (0.58) #>  #> mpg - wt: no change (-0.84) #>  #> mpg - qsec: no change (0.32) #>  #> mpg - vs: no change (0.64) #>  #> mpg - am: 0.55 -> 0.54 #>  #> mpg - gear: no change (0.42) #>  #> mpg - carb: no change (-0.57) #>  #> cyl - disp: 0.92 -> 0.89 #>  #> cyl - hp: 0.88 -> 0.82 #>  #> cyl - drat: -0.66 -> -0.64 #>  #> cyl - wt: 0.80 -> 0.78 #>  #> cyl - qsec: -0.47 -> -0.43 #>  #> cyl - vs: -0.80 -> -0.76 #>  #> cyl - am: -0.74 -> -0.66 #>  #> cyl - gear: -0.66 -> -0.64 #>  #> cyl - carb: no change (0.54) #>  #> disp - hp: no change (0.77) #>  #> disp - drat: no change (-0.57) #>  #> disp - wt: 0.88 -> 0.87 #>  #> disp - qsec: -0.45 -> -0.43 #>  #> disp - vs: no change (-0.74) #>  #> disp - am: -0.58 -> -0.56 #>  #> disp - gear: no change (-0.52) #>  #> disp - carb: no change (0.56) #>  #> hp - drat: no change (-0.41) #>  #> hp - wt: 0.62 -> 0.60 #>  #> hp - qsec: no change (-0.65) #>  #> hp - vs: no change (-0.71) #>  #> hp - am: -0.22 -> -0.23 #>  #> hp - gear: no change (-0.14) #>  #> hp - carb: 0.65 -> 0.64 #>  #> drat - wt: no change (-0.66) #>  #> drat - qsec: no change (-0.19) #>  #> drat - vs: no change (0.22) #>  #> drat - am: 0.74 -> 0.73 #>  #> drat - gear: no change (0.71) #>  #> drat - carb: no change (-0.06) #>  #> wt - qsec: -0.09 -> -0.10 #>  #> wt - vs: no change (-0.56) #>  #> wt - am: -0.72 -> -0.71 #>  #> wt - gear: -0.64 -> -0.63 #>  #> wt - carb: 0.50 -> 0.50 #>  #> qsec - vs: no change (0.73) #>  #> qsec - am: -0.35 -> -0.32 #>  #> qsec - gear: -0.13 -> -0.14 #>  #> qsec - carb: -0.63 -> -0.61 #>  #> vs - am: 0.20 -> 0.20 #>  #> vs - gear: no change (0.32) #>  #> vs - carb: -0.69 -> -0.68 #>  #> am - gear: 0.81 -> 0.79 #>  #> am - carb: -0.24 -> -0.22 #>  #> gear - carb: no change (0.03) #>"},{"path":"https://easystats.github.io/correlation/reference/cor_sort.html","id":null,"dir":"Reference","previous_headings":"","what":"Sort a correlation matrix to improve readability of groups and clusters — cor_sort","title":"Sort a correlation matrix to improve readability of groups and clusters — cor_sort","text":"Sort correlation matrix based hclust.","code":""},{"path":"https://easystats.github.io/correlation/reference/cor_sort.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sort a correlation matrix to improve readability of groups and clusters — cor_sort","text":"","code":"cor_sort(x, distance = \"correlation\", ...)"},{"path":"https://easystats.github.io/correlation/reference/cor_sort.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sort a correlation matrix to improve readability of groups and clusters — cor_sort","text":"x correlation matrix. distance distance variable calculated. correlation (default; suited correlation matrices), matrix rescaled 0-1 (distance = 0 indicating correlation 1; distance = 1 indicating correlation -1). raw, matrix used distance matrix -. Can others (euclidean, manhattan, ...), case passed dist() (see arguments ). ... arguments passed functions.","code":""},{"path":"https://easystats.github.io/correlation/reference/cor_sort.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sort a correlation matrix to improve readability of groups and clusters — cor_sort","text":"","code":"x <- correlation(mtcars)  cor_sort(as.matrix(x)) #>             carb         wt         hp        cyl       disp        qsec #> carb  1.00000000  0.4276059  0.7498125  0.5269883  0.3949769 -0.65624923 #> wt    0.42760594  1.0000000  0.6587479  0.7824958  0.8879799 -0.17471588 #> hp    0.74981247  0.6587479  1.0000000  0.8324475  0.7909486 -0.70822339 #> cyl   0.52698829  0.7824958  0.8324475  1.0000000  0.9020329 -0.59124207 #> disp  0.39497686  0.8879799  0.7909486  0.9020329  1.0000000 -0.43369788 #> qsec -0.65624923 -0.1747159 -0.7082234 -0.5912421 -0.4336979  1.00000000 #> vs   -0.56960714 -0.5549157 -0.7230967 -0.8108118 -0.7104159  0.74453544 #> mpg  -0.55092507 -0.8676594 -0.7761684 -0.8521620 -0.8475514  0.41868403 #> drat -0.09078980 -0.7124406 -0.4487591 -0.6999381 -0.7102139  0.09120476 #> am    0.05753435 -0.6924953 -0.2432043 -0.5226070 -0.5912270 -0.22986086 #> gear  0.27407284 -0.5832870 -0.1257043 -0.4926866 -0.5555692 -0.21268223 #>              vs        mpg        drat          am       gear #> carb -0.5696071 -0.5509251 -0.09078980  0.05753435  0.2740728 #> wt   -0.5549157 -0.8676594 -0.71244065 -0.69249526 -0.5832870 #> hp   -0.7230967 -0.7761684 -0.44875912 -0.24320426 -0.1257043 #> cyl  -0.8108118 -0.8521620 -0.69993811 -0.52260705 -0.4926866 #> disp -0.7104159 -0.8475514 -0.71021393 -0.59122704 -0.5555692 #> qsec  0.7445354  0.4186840  0.09120476 -0.22986086 -0.2126822 #> vs    1.0000000  0.6640389  0.44027846  0.16834512  0.2060233 #> mpg   0.6640389  1.0000000  0.68117191  0.59983243  0.4802848 #> drat  0.4402785  0.6811719  1.00000000  0.71271113  0.6996101 #> am    0.1683451  0.5998324  0.71271113  1.00000000  0.7940588 #> gear  0.2060233  0.4802848  0.69961013  0.79405876  1.0000000 cor_sort(x, hclust_method = \"ward.D2\") # It can also reorder the long form output #> # Correlation Matrix (pearson-method) #>  #> Parameter1 | Parameter2 |     r |         95% CI | t(30) |         p #> -------------------------------------------------------------------- #> wt         |       carb |  0.43 | [ 0.09,  0.68] |  2.59 | 0.205     #> wt         |       qsec | -0.17 | [-0.49,  0.19] | -0.97 | > .999    #> wt         |         vs | -0.55 | [-0.76, -0.26] | -3.65 | 0.023*    #> wt         |         am | -0.69 | [-0.84, -0.45] | -5.26 | < .001*** #> wt         |       gear | -0.58 | [-0.77, -0.29] | -3.93 | 0.012*    #> cyl        |         wt |  0.78 | [ 0.60,  0.89] |  6.88 | < .001*** #> cyl        |       disp |  0.90 | [ 0.81,  0.95] | 11.45 | < .001*** #> cyl        |         hp |  0.83 | [ 0.68,  0.92] |  8.23 | < .001*** #> cyl        |       carb |  0.53 | [ 0.22,  0.74] |  3.40 | 0.041*    #> cyl        |       qsec | -0.59 | [-0.78, -0.31] | -4.02 | 0.010*    #> cyl        |         vs | -0.81 | [-0.90, -0.64] | -7.59 | < .001*** #> cyl        |       drat | -0.70 | [-0.84, -0.46] | -5.37 | < .001*** #> cyl        |         am | -0.52 | [-0.74, -0.21] | -3.36 | 0.043*    #> cyl        |       gear | -0.49 | [-0.72, -0.17] | -3.10 | 0.079     #> disp       |         wt |  0.89 | [ 0.78,  0.94] | 10.58 | < .001*** #> disp       |         hp |  0.79 | [ 0.61,  0.89] |  7.08 | < .001*** #> disp       |       carb |  0.39 | [ 0.05,  0.65] |  2.35 | 0.303     #> disp       |       qsec | -0.43 | [-0.68, -0.10] | -2.64 | 0.197     #> disp       |         vs | -0.71 | [-0.85, -0.48] | -5.53 | < .001*** #> disp       |       drat | -0.71 | [-0.85, -0.48] | -5.53 | < .001*** #> disp       |         am | -0.59 | [-0.78, -0.31] | -4.02 | 0.010*    #> disp       |       gear | -0.56 | [-0.76, -0.26] | -3.66 | 0.023*    #> hp         |         wt |  0.66 | [ 0.40,  0.82] |  4.80 | 0.001**   #> hp         |       carb |  0.75 | [ 0.54,  0.87] |  6.21 | < .001*** #> hp         |       qsec | -0.71 | [-0.85, -0.48] | -5.49 | < .001*** #> hp         |         vs | -0.72 | [-0.86, -0.50] | -5.73 | < .001*** #> hp         |       drat | -0.45 | [-0.69, -0.12] | -2.75 | 0.170     #> hp         |         am | -0.24 | [-0.55,  0.12] | -1.37 | > .999    #> hp         |       gear | -0.13 | [-0.45,  0.23] | -0.69 | > .999    #> qsec       |       carb | -0.66 | [-0.82, -0.40] | -4.76 | 0.001**   #> qsec       |         vs |  0.74 | [ 0.53,  0.87] |  6.11 | < .001*** #> qsec       |         am | -0.23 | [-0.54,  0.13] | -1.29 | > .999    #> qsec       |       gear | -0.21 | [-0.52,  0.15] | -1.19 | > .999    #> vs         |       carb | -0.57 | [-0.77, -0.28] | -3.80 | 0.017*    #> vs         |         am |  0.17 | [-0.19,  0.49] |  0.94 | > .999    #> vs         |       gear |  0.21 | [-0.15,  0.52] |  1.15 | > .999    #> mpg        |         wt | -0.87 | [-0.93, -0.74] | -9.56 | < .001*** #> mpg        |        cyl | -0.85 | [-0.93, -0.72] | -8.92 | < .001*** #> mpg        |       disp | -0.85 | [-0.92, -0.71] | -8.75 | < .001*** #> mpg        |         hp | -0.78 | [-0.89, -0.59] | -6.74 | < .001*** #> mpg        |       carb | -0.55 | [-0.75, -0.25] | -3.62 | 0.024*    #> mpg        |       qsec |  0.42 | [ 0.08,  0.67] |  2.53 | 0.222     #> mpg        |         vs |  0.66 | [ 0.41,  0.82] |  4.86 | 0.001**   #> mpg        |       drat |  0.68 | [ 0.44,  0.83] |  5.10 | < .001*** #> mpg        |         am |  0.60 | [ 0.32,  0.78] |  4.11 | 0.008**   #> mpg        |       gear |  0.48 | [ 0.16,  0.71] |  3.00 | 0.097     #> drat       |         wt | -0.71 | [-0.85, -0.48] | -5.56 | < .001*** #> drat       |       carb | -0.09 | [-0.43,  0.27] | -0.50 | > .999    #> drat       |       qsec |  0.09 | [-0.27,  0.43] |  0.50 | > .999    #> drat       |         vs |  0.44 | [ 0.11,  0.68] |  2.69 | 0.187     #> drat       |         am |  0.71 | [ 0.48,  0.85] |  5.57 | < .001*** #> drat       |       gear |  0.70 | [ 0.46,  0.84] |  5.36 | < .001*** #> am         |       carb |  0.06 | [-0.30,  0.40] |  0.32 | > .999    #> am         |       gear |  0.79 | [ 0.62,  0.89] |  7.16 | < .001*** #> gear       |       carb |  0.27 | [-0.08,  0.57] |  1.56 | > .999    #>  #> p-value adjustment method: Holm (1979) #> Observations: 32 cor_sort(summary(x, redundant = TRUE)) # As well as from the summary #> Warning: invalid factor level, NA generated #> Warning: invalid factor level, NA generated #> # Correlation Matrix (pearson-method) #>  #> Parameter |     carb |       wt |       hp |      cyl |     disp |     qsec |       vs |      mpg |     drat |       am |     gear #> ---------------------------------------------------------------------------------------------------------------------------------- #> carb      |          |  0.43*** |  0.75*** |  0.53*** |  0.39*** | -0.66*** |    -0.57 |  -0.55** |  -0.09** |     0.06 |    0.27* #> wt        |  0.43*** |          |  0.66*** |  0.78*** |  0.89*** | -0.17*** |   -0.55* | -0.87*** |   -0.71* |    -0.69 |   -0.58* #> hp        |  0.75*** |  0.66*** |          |  0.83*** |  0.79*** | -0.71*** |    -0.72 | -0.78*** |   -0.45* |   -0.24* |    -0.13 #> cyl       |  0.53*** |  0.78*** |  0.83*** |          |     0.90 |  -0.59** | -0.81*** | -0.85*** |    -0.70 |    -0.52 | -0.49*** #> disp      |  0.39*** |  0.89*** |  0.79*** |     0.90 |          | -0.43*** |    -0.71 |    -0.85 | -0.71*** | -0.59*** |    -0.56 #> qsec      | -0.66*** | -0.17*** | -0.71*** |  -0.59** | -0.43*** |          |     0.74 |    0.42* |  0.09*** |   -0.23* |    -0.21 #> vs        |    -0.57 |   -0.55* |    -0.72 | -0.81*** |    -0.71 |     0.74 |          |  0.66*** |     0.44 |     0.17 |   0.21** #> mpg       |  -0.55** | -0.87*** | -0.78*** | -0.85*** |    -0.85 |    0.42* |  0.66*** |          |     0.68 |     0.60 |    0.48* #> drat      |  -0.09** |   -0.71* |   -0.45* |    -0.70 | -0.71*** |  0.09*** |     0.44 |     0.68 |          |  0.71*** |     0.70 #> am        |     0.06 |    -0.69 |   -0.24* |    -0.52 | -0.59*** |   -0.23* |     0.17 |     0.60 |  0.71*** |          |     0.79 #> gear      |    0.27* |   -0.58* |    -0.13 | -0.49*** |    -0.56 |    -0.21 |   0.21** |    0.48* |     0.70 |     0.79 |          #>  #> p-value adjustment method: Holm (1979)"},{"path":"https://easystats.github.io/correlation/reference/cor_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Correlation test — cor_test","title":"Correlation test — cor_test","text":"function performs correlation test two variables. can easily visualize result using plot() (see examples ).","code":""},{"path":"https://easystats.github.io/correlation/reference/cor_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correlation test — cor_test","text":"","code":"cor_test(   data,   x,   y,   method = \"pearson\",   ci = 0.95,   bayesian = FALSE,   bayesian_prior = \"medium\",   bayesian_ci_method = \"hdi\",   bayesian_test = c(\"pd\", \"rope\", \"bf\"),   include_factors = FALSE,   partial = FALSE,   partial_bayesian = FALSE,   multilevel = FALSE,   ranktransform = FALSE,   winsorize = FALSE,   verbose = TRUE,   ... )"},{"path":"https://easystats.github.io/correlation/reference/cor_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correlation test — cor_test","text":"data data frame. x, y Names two variables present data. method character string indicating correlation coefficient used test. One \"pearson\" (default), \"kendall\", \"spearman\" (see also robust argument), \"biserial\", \"polychoric\", \"tetrachoric\", \"biweight\", \"distance\", \"percentage\" (percentage bend correlation), \"blomqvist\" (Blomqvist's coefficient), \"hoeffding\" (Hoeffding's D), \"gamma\", \"gaussian\" (Gaussian Rank correlation) \"shepherd\" (Shepherd's Pi correlation). Setting \"auto\" attempt selecting relevant method (polychoric ordinal factors involved, tetrachoric dichotomous factors involved, point-biserial one dichotomous one continuous pearson otherwise). See details section description indices. ci Confidence/Credible Interval level. \"default\", set 0.95 (95% CI). bayesian TRUE, run correlations Bayesian framework. bayesian_prior prior argument, several named values recognized: \"medium.narrow\", \"medium\", \"wide\", \"ultrawide\". correspond scale values 1/sqrt(27), 1/3, 1/sqrt(3) 1, respectively. See BayesFactor::correlationBF function. bayesian_ci_method, bayesian_test See arguments model_parameters() BayesFactor tests. include_factors TRUE, factors kept eventually converted numeric used random effects (depending multilevel). FALSE, factors removed upfront. partial Can TRUE \"semi\" partial semi-partial correlations, respectively. partial_bayesian partial correlations Bayesian framework needed, also need set partial_bayesian TRUE obtain \"full\" Bayesian partial correlations. Otherwise, obtain pseudo-Bayesian partial correlations (.e., Bayesian correlation based frequentist partialization). multilevel TRUE, factors included random factors. Else, FALSE (default), included fixed effects simple regression model. ranktransform TRUE, rank-transform variables prior estimating correlation, one way making analysis resistant extreme values (outliers). Note , instance, Pearson's correlation rank-transformed data equivalent Spearman's rank correlation. Thus, using robust=TRUE method=\"spearman\" redundant. Nonetheless, easy option increase robustness correlation well flexible way obtain Bayesian multilevel Spearman-like rank correlations. winsorize Another way making correlation \"robust\" (.e., limiting impact extreme values). Can either FALSE number 0 1 (e.g., 0.2) corresponds desired threshold. See winsorize() function details. verbose Toggle warnings. ... Additional arguments (e.g., alternative) passed methods. See stats::cor.test details.","code":""},{"path":[]},{"path":"https://easystats.github.io/correlation/reference/cor_test.html","id":"correlation-types","dir":"Reference","previous_headings":"","what":"Correlation Types","title":"Correlation test — cor_test","text":"Pearson's correlation: common correlation method. corresponds covariance two variables normalized (.e., divided) product standard deviations. Spearman's rank correlation: non-parametric measure rank correlation (statistical dependence rankings two variables). Spearman correlation two variables equal Pearson correlation rank values two variables; Pearson's correlation assesses linear relationships, Spearman's correlation assesses monotonic relationships (whether linear ). Confidence Intervals (CI) Spearman's correlations computed using Fieller et al. (1957) correction (see Bishara Hittner, 2017). Kendall's rank correlation: normal case, Kendall correlation preferred Spearman correlation smaller gross error sensitivity (GES) smaller asymptotic variance (AV), making robust efficient. However, interpretation Kendall's tau less direct Spearman's rho, sense quantifies difference percentage concordant discordant pairs among possible pairwise events. Confidence Intervals (CI) Kendall's correlations computed using Fieller et al. (1957) correction (see Bishara Hittner, 2017). Biweight midcorrelation: measure similarity median-based, instead traditional mean-based, thus less sensitive outliers. can used robust alternative similarity metrics, Pearson correlation (Langfelder & Horvath, 2012). Distance correlation: Distance correlation measures linear non-linear association two random variables random vectors. contrast Pearson's correlation, can detect linear association two random variables. Percentage bend correlation: Introduced Wilcox (1994), based -weight specified percentage marginal observations deviating median (default, 20%). Shepherd's Pi correlation: Equivalent Spearman's rank correlation outliers removal (means bootstrapped Mahalanobis distance). Blomqvist’s coefficient: Blomqvist’s coefficient (also referred Blomqvist's Beta medial correlation; Blomqvist, 1950) median-based non-parametric correlation advantages measures Spearman's Kendall's estimates (see Shmid & Schimdt, 2006). Hoeffding’s D: Hoeffding’s D statistics non-parametric rank based measure association detects general departures independence (Hoeffding 1948), including non-linear associations. Hoeffding’s D varies -0.5 1 (tied ranks, otherwise can lower values), larger values indicating stronger relationship variables. Somers’ D: Somers’ D statistics non-parametric rank based measure association binary variable continuous variable, instance, context logistic regression binary outcome predicted probabilities outcome. Usually, Somers' D measure ordinal association, however, implementation limited case binary outcome. Point-Biserial biserial correlation: Correlation coefficient used one variable continuous dichotomous (binary). Point-Biserial equivalent Pearson's correlation, Biserial used binary variable assumed underlying continuity. example, anxiety level can measured continuous scale, can classified dichotomously high/low. Gamma correlation: Goodman-Kruskal gamma statistic similar Kendall's Tau coefficient. relatively robust outliers deals well data many ties. Winsorized correlation: Correlation variables formerly Winsorized, .e., transformed limiting extreme values reduce effect possibly spurious outliers. Gaussian rank Correlation: Gaussian rank correlation estimator simple well-performing alternative robust rank correlations (Boudt et al., 2012). based Gaussian quantiles ranks. Polychoric correlation: Correlation two theorized normally distributed continuous latent variables, two observed ordinal variables. Tetrachoric correlation: Special case polychoric correlation applicable observed variables dichotomous.","code":""},{"path":"https://easystats.github.io/correlation/reference/cor_test.html","id":"partial-correlation","dir":"Reference","previous_headings":"","what":"Partial Correlation","title":"Correlation test — cor_test","text":"Partial correlations estimated correlation two variables adjusting (linear) effect one variable. correlation test run partialized dataset, independently . words, considers partialization independent step generating different dataset, rather belonging model. discrepancies expected t- p-values, CIs, BFs etc (correlation coefficient) compared implementations (e.g., ppcor). (size discrepancies depends number covariates partialled-strength linear association variables.) partial correlations can represented Gaussian Graphical Models (GGM), increasingly popular tool psychology. GGM traditionally include set variables depicted circles (\"nodes\"), set lines visualize relationships , thickness represents strength association (see Bhushan et al., 2019). Multilevel correlations special case partial correlations variable adjusted factor included random effect mixed model (note remaining continuous variables dataset still included fixed effects, similarly regular partial correlations). model random intercept model, .e. multilevel correlation adjusted (1 | groupfactor).said, important difference using cor_test() correlation(): set multilevel=TRUE correlation() partial set FALSE (per default), back-transformation partial non-partial correlation attempted (pcor_to_cor()). However, possible using cor_test() set multilevel=TRUE , resulting correlations partial one. Note Bayesian multilevel correlations, partial = FALSE, back transformation also recompute p-values based new r scores, drop Bayes factors (relevant anymore). keep Bayesian scores, set partial = TRUE.","code":""},{"path":"https://easystats.github.io/correlation/reference/cor_test.html","id":"notes","dir":"Reference","previous_headings":"","what":"Notes","title":"Correlation test — cor_test","text":"Kendall Spearman correlations bayesian=TRUE: technically Pearson Bayesian correlations rank transformed data, rather pure Bayesian rank correlations (different priors).","code":""},{"path":"https://easystats.github.io/correlation/reference/cor_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Correlation test — cor_test","text":"","code":"library(correlation)  cor_test(iris, \"Sepal.Length\", \"Sepal.Width\") #> Parameter1   |  Parameter2 |     r |        95% CI | t(148) |     p #> ------------------------------------------------------------------- #> Sepal.Length | Sepal.Width | -0.12 | [-0.27, 0.04] |  -1.44 | 0.152 #>  #> Observations: 150 cor_test(iris, \"Sepal.Length\", \"Sepal.Width\", method = \"spearman\") #> Parameter1   |  Parameter2 |   rho |         95% CI |        S |      p #> ----------------------------------------------------------------------- #> Sepal.Length | Sepal.Width | -0.17 | [-0.32,  0.00] | 6.56e+05 | 0.041* #>  #> Observations: 150 if (FALSE) { cor_test(iris, \"Sepal.Length\", \"Sepal.Width\", method = \"kendall\") cor_test(iris, \"Sepal.Length\", \"Sepal.Width\", method = \"biweight\") cor_test(iris, \"Sepal.Length\", \"Sepal.Width\", method = \"distance\") cor_test(iris, \"Sepal.Length\", \"Sepal.Width\", method = \"percentage\") if (require(\"wdm\", quietly = TRUE)) {   cor_test(iris, \"Sepal.Length\", \"Sepal.Width\", method = \"blomqvist\") } if (require(\"Hmisc\", quietly = TRUE)) {   cor_test(iris, \"Sepal.Length\", \"Sepal.Width\", method = \"hoeffding\") } cor_test(iris, \"Sepal.Length\", \"Sepal.Width\", method = \"gamma\") cor_test(iris, \"Sepal.Length\", \"Sepal.Width\", method = \"gaussian\") cor_test(iris, \"Sepal.Length\", \"Sepal.Width\", method = \"shepherd\") if (require(\"BayesFactor\", quietly = TRUE)) {   cor_test(iris, \"Sepal.Length\", \"Sepal.Width\", bayesian = TRUE) }  # Robust (these two are equivalent) cor_test(iris, \"Sepal.Length\", \"Sepal.Width\", method = \"spearman\") cor_test(iris, \"Sepal.Length\", \"Sepal.Width\", method = \"pearson\", ranktransform = TRUE)  # Winsorized cor_test(iris, \"Sepal.Length\", \"Sepal.Width\", winsorize = 0.2)  # Tetrachoric if (require(\"psych\", quietly = TRUE)) {   data <- iris   data$Sepal.Width_binary <- ifelse(data$Sepal.Width > 3, 1, 0)   data$Petal.Width_binary <- ifelse(data$Petal.Width > 1.2, 1, 0)   cor_test(data, \"Sepal.Width_binary\", \"Petal.Width_binary\", method = \"tetrachoric\")    # Biserial   cor_test(data, \"Sepal.Width\", \"Petal.Width_binary\", method = \"biserial\")    # Polychoric   data$Petal.Width_ordinal <- as.factor(round(data$Petal.Width))   data$Sepal.Length_ordinal <- as.factor(round(data$Sepal.Length))   cor_test(data, \"Petal.Width_ordinal\", \"Sepal.Length_ordinal\", method = \"polychoric\")    # When one variable is continuous, will run 'polyserial' correlation   cor_test(data, \"Sepal.Width\", \"Sepal.Length_ordinal\", method = \"polychoric\") }  # Partial cor_test(iris, \"Sepal.Length\", \"Sepal.Width\", partial = TRUE) cor_test(iris, \"Sepal.Length\", \"Sepal.Width\", multilevel = TRUE) cor_test(iris, \"Sepal.Length\", \"Sepal.Width\", partial_bayesian = TRUE) }"},{"path":"https://easystats.github.io/correlation/reference/cor_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Correlation text — cor_text","title":"Correlation text — cor_text","text":"function returns formatted character correlation statistics.","code":""},{"path":"https://easystats.github.io/correlation/reference/cor_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correlation text — cor_text","text":"","code":"cor_text(x, show_ci = TRUE, show_statistic = TRUE, show_sig = TRUE, ...)"},{"path":"https://easystats.github.io/correlation/reference/cor_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correlation text — cor_text","text":"x dataframe correlation statistics. show_ci, show_statistic, show_sig Toggle /different parts text. ... arguments passed functions.","code":""},{"path":"https://easystats.github.io/correlation/reference/cor_text.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Correlation text — cor_text","text":"","code":"rez <- cor_test(mtcars, \"mpg\", \"wt\")  cor_text(rez) #> [1] \"r = -0.87, 95% CI [-0.93, -0.74], t(30) = -9.56, p < .001\" cor_text(rez, show_statistic = FALSE, show_ci = FALSE, stars = TRUE) #> [1] \"r = -0.87, p < .001***\"  rez <- correlation(mtcars)  cor_text(rez) #>  [1] \"r = -0.85, 95% CI [-0.93, -0.72], t(30) = -8.92, p < .001\"  #>  [2] \"r = -0.85, 95% CI [-0.92, -0.71], t(30) = -8.75, p < .001\"  #>  [3] \"r = -0.78, 95% CI [-0.89, -0.59], t(30) = -6.74, p < .001\"  #>  [4] \"r = 0.68, 95% CI [0.44, 0.83], t(30) = 5.10, p < .001\"      #>  [5] \"r = -0.87, 95% CI [-0.93, -0.74], t(30) = -9.56, p < .001\"  #>  [6] \"r = 0.42, 95% CI [0.08, 0.67], t(30) = 2.53, p = 0.222\"     #>  [7] \"r = 0.66, 95% CI [0.41, 0.82], t(30) = 4.86, p = 0.001\"     #>  [8] \"r = 0.60, 95% CI [0.32, 0.78], t(30) = 4.11, p = 0.008\"     #>  [9] \"r = 0.48, 95% CI [0.16, 0.71], t(30) = 3.00, p = 0.097\"     #> [10] \"r = -0.55, 95% CI [-0.75, -0.25], t(30) = -3.62, p = 0.024\" #> [11] \"r = 0.90, 95% CI [0.81, 0.95], t(30) = 11.45, p < .001\"     #> [12] \"r = 0.83, 95% CI [0.68, 0.92], t(30) = 8.23, p < .001\"      #> [13] \"r = -0.70, 95% CI [-0.84, -0.46], t(30) = -5.37, p < .001\"  #> [14] \"r = 0.78, 95% CI [0.60, 0.89], t(30) = 6.88, p < .001\"      #> [15] \"r = -0.59, 95% CI [-0.78, -0.31], t(30) = -4.02, p = 0.010\" #> [16] \"r = -0.81, 95% CI [-0.90, -0.64], t(30) = -7.59, p < .001\"  #> [17] \"r = -0.52, 95% CI [-0.74, -0.21], t(30) = -3.36, p = 0.043\" #> [18] \"r = -0.49, 95% CI [-0.72, -0.17], t(30) = -3.10, p = 0.079\" #> [19] \"r = 0.53, 95% CI [0.22, 0.74], t(30) = 3.40, p = 0.041\"     #> [20] \"r = 0.79, 95% CI [0.61, 0.89], t(30) = 7.08, p < .001\"      #> [21] \"r = -0.71, 95% CI [-0.85, -0.48], t(30) = -5.53, p < .001\"  #> [22] \"r = 0.89, 95% CI [0.78, 0.94], t(30) = 10.58, p < .001\"     #> [23] \"r = -0.43, 95% CI [-0.68, -0.10], t(30) = -2.64, p = 0.197\" #> [24] \"r = -0.71, 95% CI [-0.85, -0.48], t(30) = -5.53, p < .001\"  #> [25] \"r = -0.59, 95% CI [-0.78, -0.31], t(30) = -4.02, p = 0.010\" #> [26] \"r = -0.56, 95% CI [-0.76, -0.26], t(30) = -3.66, p = 0.023\" #> [27] \"r = 0.39, 95% CI [0.05, 0.65], t(30) = 2.35, p = 0.303\"     #> [28] \"r = -0.45, 95% CI [-0.69, -0.12], t(30) = -2.75, p = 0.170\" #> [29] \"r = 0.66, 95% CI [0.40, 0.82], t(30) = 4.80, p = 0.001\"     #> [30] \"r = -0.71, 95% CI [-0.85, -0.48], t(30) = -5.49, p < .001\"  #> [31] \"r = -0.72, 95% CI [-0.86, -0.50], t(30) = -5.73, p < .001\"  #> [32] \"r = -0.24, 95% CI [-0.55, 0.12], t(30) = -1.37, p > .999\"   #> [33] \"r = -0.13, 95% CI [-0.45, 0.23], t(30) = -0.69, p > .999\"   #> [34] \"r = 0.75, 95% CI [0.54, 0.87], t(30) = 6.21, p < .001\"      #> [35] \"r = -0.71, 95% CI [-0.85, -0.48], t(30) = -5.56, p < .001\"  #> [36] \"r = 0.09, 95% CI [-0.27, 0.43], t(30) = 0.50, p > .999\"     #> [37] \"r = 0.44, 95% CI [0.11, 0.68], t(30) = 2.69, p = 0.187\"     #> [38] \"r = 0.71, 95% CI [0.48, 0.85], t(30) = 5.57, p < .001\"      #> [39] \"r = 0.70, 95% CI [0.46, 0.84], t(30) = 5.36, p < .001\"      #> [40] \"r = -0.09, 95% CI [-0.43, 0.27], t(30) = -0.50, p > .999\"   #> [41] \"r = -0.17, 95% CI [-0.49, 0.19], t(30) = -0.97, p > .999\"   #> [42] \"r = -0.55, 95% CI [-0.76, -0.26], t(30) = -3.65, p = 0.023\" #> [43] \"r = -0.69, 95% CI [-0.84, -0.45], t(30) = -5.26, p < .001\"  #> [44] \"r = -0.58, 95% CI [-0.77, -0.29], t(30) = -3.93, p = 0.012\" #> [45] \"r = 0.43, 95% CI [0.09, 0.68], t(30) = 2.59, p = 0.205\"     #> [46] \"r = 0.74, 95% CI [0.53, 0.87], t(30) = 6.11, p < .001\"      #> [47] \"r = -0.23, 95% CI [-0.54, 0.13], t(30) = -1.29, p > .999\"   #> [48] \"r = -0.21, 95% CI [-0.52, 0.15], t(30) = -1.19, p > .999\"   #> [49] \"r = -0.66, 95% CI [-0.82, -0.40], t(30) = -4.76, p = 0.001\" #> [50] \"r = 0.17, 95% CI [-0.19, 0.49], t(30) = 0.94, p > .999\"     #> [51] \"r = 0.21, 95% CI [-0.15, 0.52], t(30) = 1.15, p > .999\"     #> [52] \"r = -0.57, 95% CI [-0.77, -0.28], t(30) = -3.80, p = 0.017\" #> [53] \"r = 0.79, 95% CI [0.62, 0.89], t(30) = 7.16, p < .001\"      #> [54] \"r = 0.06, 95% CI [-0.30, 0.40], t(30) = 0.32, p > .999\"     #> [55] \"r = 0.27, 95% CI [-0.08, 0.57], t(30) = 1.56, p > .999\""},{"path":"https://easystats.github.io/correlation/reference/cor_to_cov.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a correlation to covariance — cor_to_cov","title":"Convert a correlation to covariance — cor_to_cov","text":"Convert correlation covariance","code":""},{"path":"https://easystats.github.io/correlation/reference/cor_to_cov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a correlation to covariance — cor_to_cov","text":"","code":"cor_to_cov(cor, sd = NULL, variance = NULL, tol = .Machine$double.eps^(2/3))"},{"path":"https://easystats.github.io/correlation/reference/cor_to_cov.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a correlation to covariance — cor_to_cov","text":"cor correlation matrix, partial semipartial correlation matrix. sd, variance vector contains standard deviations, variance, variables correlation matrix. tol Relative tolerance detect zero singular values.","code":""},{"path":"https://easystats.github.io/correlation/reference/cor_to_cov.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a correlation to covariance — cor_to_cov","text":"covariance matrix.","code":""},{"path":"https://easystats.github.io/correlation/reference/cor_to_cov.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a correlation to covariance — cor_to_cov","text":"","code":"cor <- cor(iris[1:4]) cov(iris[1:4]) #>              Sepal.Length Sepal.Width Petal.Length Petal.Width #> Sepal.Length    0.6856935  -0.0424340    1.2743154   0.5162707 #> Sepal.Width    -0.0424340   0.1899794   -0.3296564  -0.1216394 #> Petal.Length    1.2743154  -0.3296564    3.1162779   1.2956094 #> Petal.Width     0.5162707  -0.1216394    1.2956094   0.5810063  cor_to_cov(cor, sd = sapply(iris[1:4], sd)) #>              Sepal.Length Sepal.Width Petal.Length Petal.Width #> Sepal.Length    0.6856935  -0.0424340    1.2743154   0.5162707 #> Sepal.Width    -0.0424340   0.1899794   -0.3296564  -0.1216394 #> Petal.Length    1.2743154  -0.3296564    3.1162779   1.2956094 #> Petal.Width     0.5162707  -0.1216394    1.2956094   0.5810063 cor_to_cov(cor, variance = sapply(iris[1:4], var)) #>              Sepal.Length Sepal.Width Petal.Length Petal.Width #> Sepal.Length    0.6856935  -0.0424340    1.2743154   0.5162707 #> Sepal.Width    -0.0424340   0.1899794   -0.3296564  -0.1216394 #> Petal.Length    1.2743154  -0.3296564    3.1162779   1.2956094 #> Petal.Width     0.5162707  -0.1216394    1.2956094   0.5810063"},{"path":"https://easystats.github.io/correlation/reference/cor_to_p.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert correlation to p-values and CIs — cor_to_ci","title":"Convert correlation to p-values and CIs — cor_to_ci","text":"Get statistics, p-values confidence intervals (CI) correlation coefficients.","code":""},{"path":"https://easystats.github.io/correlation/reference/cor_to_p.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert correlation to p-values and CIs — cor_to_ci","text":"","code":"cor_to_ci(cor, n, ci = 0.95, method = \"pearson\", correction = \"fieller\", ...)  cor_to_p(cor, n, method = \"pearson\")"},{"path":"https://easystats.github.io/correlation/reference/cor_to_p.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert correlation to p-values and CIs — cor_to_ci","text":"cor correlation matrix coefficient. n sample size (number observations). ci Confidence/Credible Interval level. \"default\", set 0.95 (95% CI). method character string indicating correlation coefficient used test. One \"pearson\" (default), \"kendall\", \"spearman\" (see also robust argument), \"biserial\", \"polychoric\", \"tetrachoric\", \"biweight\", \"distance\", \"percentage\" (percentage bend correlation), \"blomqvist\" (Blomqvist's coefficient), \"hoeffding\" (Hoeffding's D), \"gamma\", \"gaussian\" (Gaussian Rank correlation) \"shepherd\" (Shepherd's Pi correlation). Setting \"auto\" attempt selecting relevant method (polychoric ordinal factors involved, tetrachoric dichotomous factors involved, point-biserial one dichotomous one continuous pearson otherwise). See details section description indices. correction used method 'spearman' 'kendall'. Can 'fieller' (default; Fieller et al., 1957), 'bw' (Spearman) 'none'. Bonett Wright (2000) claim correction ('bw') performs better, though Bishara Hittner (2017) paper favours Fieller correction. generally similar. ... Additional arguments (e.g., alternative) passed methods. See stats::cor.test details.","code":""},{"path":"https://easystats.github.io/correlation/reference/cor_to_p.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert correlation to p-values and CIs — cor_to_ci","text":"list containing p-value statistic CI bounds.","code":""},{"path":"https://easystats.github.io/correlation/reference/cor_to_p.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Convert correlation to p-values and CIs — cor_to_ci","text":"Bishara, . J., & Hittner, J. B. (2017). Confidence intervals correlations data normal. Behavior research methods, 49(1), 294-309.","code":""},{"path":"https://easystats.github.io/correlation/reference/cor_to_p.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert correlation to p-values and CIs — cor_to_ci","text":"","code":"cor.test(iris$Sepal.Length, iris$Sepal.Width) #>  #> \tPearson's product-moment correlation #>  #> data:  iris$Sepal.Length and iris$Sepal.Width #> t = -1.4403, df = 148, p-value = 0.1519 #> alternative hypothesis: true correlation is not equal to 0 #> 95 percent confidence interval: #>  -0.27269325  0.04351158 #> sample estimates: #>        cor  #> -0.1175698  #>  cor_to_p(-0.1175698, n = 150) #> $p #> [1] 0.1518982 #>  #> $statistic #> [1] -1.440287 #>  cor_to_p(cor(iris[1:4]), n = 150) #> $p #>              Sepal.Length  Sepal.Width Petal.Length  Petal.Width #> Sepal.Length 0.000000e+00 1.518983e-01 1.038667e-47 2.325498e-37 #> Sepal.Width  1.518983e-01 0.000000e+00 4.513314e-08 4.073229e-06 #> Petal.Length 1.038667e-47 4.513314e-08 0.000000e+00 4.675004e-86 #> Petal.Width  2.325498e-37 4.073229e-06 4.675004e-86 0.000000e+00 #>  #> $statistic #>              Sepal.Length Sepal.Width Petal.Length Petal.Width #> Sepal.Length          Inf   -1.440287    21.646019   17.296454 #> Sepal.Width     -1.440287         Inf    -5.768449   -4.786461 #> Petal.Length    21.646019   -5.768449          Inf   43.387237 #> Petal.Width     17.296454   -4.786461    43.387237         Inf #>  cor_to_ci(-0.1175698, n = 150) #> $CI_low #> [1] -0.2726933 #>  #> $CI_high #> [1] 0.04351157 #>  cor_to_ci(cor(iris[1:4]), n = 150) #> $CI_low #>              Sepal.Length Sepal.Width Petal.Length Petal.Width #> Sepal.Length    1.0000000  -0.2726932    0.8270363   0.7568971 #> Sepal.Width    -0.2726932   1.0000000   -0.5508771  -0.4972130 #> Petal.Length    0.8270363  -0.5508771    1.0000000   0.9490525 #> Petal.Width     0.7568971  -0.4972130    0.9490525   1.0000000 #>  #> $CI_high #>              Sepal.Length Sepal.Width Petal.Length Petal.Width #> Sepal.Length   1.00000000  0.04351158    0.9055080   0.8648361 #> Sepal.Width    0.04351158  1.00000000   -0.2879499  -0.2186966 #> Petal.Length   0.90550805 -0.28794993    1.0000000   0.9729853 #> Petal.Width    0.86483606 -0.21869663    0.9729853   1.0000000 #>   cor.test(iris$Sepal.Length, iris$Sepal.Width, method = \"spearman\") #> Warning: Cannot compute exact p-value with ties #>  #> \tSpearman's rank correlation rho #>  #> data:  iris$Sepal.Length and iris$Sepal.Width #> S = 656283, p-value = 0.04137 #> alternative hypothesis: true rho is not equal to 0 #> sample estimates: #>        rho  #> -0.1667777  #>  cor_to_p(-0.1667777, n = 150, method = \"spearman\") #> $p #> [1] 0.04136794 #>  #> $statistic #> [1] -2.057758 #>  cor_to_ci(-0.1667777, ci = 0.95, n = 150) #> $CI_low #> [1] -0.3185257 #>  #> $CI_high #> [1] -0.006695121 #>   cor.test(iris$Sepal.Length, iris$Sepal.Width, method = \"kendall\") #>  #> \tKendall's rank correlation tau #>  #> data:  iris$Sepal.Length and iris$Sepal.Width #> z = -1.3318, p-value = 0.1829 #> alternative hypothesis: true tau is not equal to 0 #> sample estimates: #>         tau  #> -0.07699679  #>  cor_to_p(-0.07699679, n = 150, method = \"kendall\") #> Warning: Estimation for Kendall's correlation is not perfectly correct. Help us to improve it. #> $p #> [1] 0.1620545 #>  #> $statistic #> [1] -1.398195 #>"},{"path":"https://easystats.github.io/correlation/reference/cor_to_pcor.html","id":null,"dir":"Reference","previous_headings":"","what":"Correlation Matrix to (Semi) Partial Correlations — cor_to_pcor","title":"Correlation Matrix to (Semi) Partial Correlations — cor_to_pcor","text":"Convert correlation matrix (semi)partial correlation matrix. Partial correlations measure correlation two variables remains controlling (.e., \"partialling\" ) relationships. can used graphical Gaussian models, represent direct interactions two variables, conditioned remaining variables. means squared partial correlation predictor X1 response variable Y can interpreted proportion (unique) variance accounted X1 relative residual unexplained variance Y accounted variables.","code":""},{"path":"https://easystats.github.io/correlation/reference/cor_to_pcor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correlation Matrix to (Semi) Partial Correlations — cor_to_pcor","text":"","code":"cor_to_pcor(cor, tol = .Machine$double.eps^(2/3))  pcor_to_cor(pcor, tol = .Machine$double.eps^(2/3))  cor_to_spcor(cor = NULL, cov = NULL, tol = .Machine$double.eps^(2/3))"},{"path":"https://easystats.github.io/correlation/reference/cor_to_pcor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correlation Matrix to (Semi) Partial Correlations — cor_to_pcor","text":"cor correlation matrix, partial semipartial correlation matrix. tol Relative tolerance detect zero singular values. pcor correlation matrix, partial semipartial correlation matrix. cov covariance matrix (vector SD variables). Required semi-partial correlations.","code":""},{"path":"https://easystats.github.io/correlation/reference/cor_to_pcor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Correlation Matrix to (Semi) Partial Correlations — cor_to_pcor","text":"(semi) partial correlation matrix.","code":""},{"path":"https://easystats.github.io/correlation/reference/cor_to_pcor.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Correlation Matrix to (Semi) Partial Correlations — cor_to_pcor","text":"semi-partial correlation similar partial correlation statistic. However, represents (squared) proportion (unique) variance accounted predictor X1, relative total variance Y. Thus, might seen better indicator \"practical relevance\" predictor, scaled (.e., relative ) total variability response variable.","code":""},{"path":"https://easystats.github.io/correlation/reference/cor_to_pcor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Correlation Matrix to (Semi) Partial Correlations — cor_to_pcor","text":"","code":"cor <- cor(iris[1:4])  # Partialize cor_to_pcor(cor) #>              Sepal.Length Sepal.Width Petal.Length Petal.Width #> Sepal.Length    1.0000000   0.6285707    0.7190656  -0.3396174 #> Sepal.Width     0.6285707   1.0000000   -0.6152919   0.3526260 #> Petal.Length    0.7190656  -0.6152919    1.0000000   0.8707698 #> Petal.Width    -0.3396174   0.3526260    0.8707698   1.0000000 cor_to_spcor(cor, cov = sapply(iris[1:4], sd)) #>              Sepal.Length Sepal.Width Petal.Length Petal.Width #> Sepal.Length   1.00000000  0.30389212    0.3890689  -0.1357714 #> Sepal.Width    0.55758743  1.00000000   -0.5385056   0.2599849 #> Petal.Length   0.18506103 -0.13959991    1.0000000   0.3167424 #> Petal.Width   -0.09001634  0.09394365    0.4415000   1.0000000  # Inverse round(pcor_to_cor(cor_to_pcor(cor)) - cor, 2) # Should be 0 #>              Sepal.Length Sepal.Width Petal.Length Petal.Width #> Sepal.Length            0           0            0           0 #> Sepal.Width             0           0            0           0 #> Petal.Length            0           0            0           0 #> Petal.Width             0           0            0           0"},{"path":"https://easystats.github.io/correlation/reference/correlation.html","id":null,"dir":"Reference","previous_headings":"","what":"Correlation Analysis — correlation","title":"Correlation Analysis — correlation","text":"Performs correlation analysis. can easily visualize result using plot() (see examples ).","code":""},{"path":"https://easystats.github.io/correlation/reference/correlation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correlation Analysis — correlation","text":"","code":"correlation(   data,   data2 = NULL,   select = NULL,   select2 = NULL,   rename = NULL,   method = \"pearson\",   p_adjust = \"holm\",   ci = 0.95,   bayesian = FALSE,   bayesian_prior = \"medium\",   bayesian_ci_method = \"hdi\",   bayesian_test = c(\"pd\", \"rope\", \"bf\"),   redundant = FALSE,   include_factors = FALSE,   partial = FALSE,   partial_bayesian = FALSE,   multilevel = FALSE,   ranktransform = FALSE,   winsorize = FALSE,   verbose = TRUE,   standardize_names = getOption(\"easystats.standardize_names\", FALSE),   ... )"},{"path":"https://easystats.github.io/correlation/reference/correlation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correlation Analysis — correlation","text":"data data frame. data2 optional data frame. specified, pair-wise correlations variables data data2 computed. select, select2 (Ignored data2 specified.) Optional names variables selected correlation. Instead providing data frames variables correlated, data can data frame select select2 (quoted) names variables (columns) data. correlation() compute correlation data[select] data[select2]. select specified, pairwise correlations select variables computed. \"pipe-friendly\" alternative way using correlation() (see 'Examples'). rename case wish change names variables output, arguments can used specify alternative names. Note number names equal number columns selected. Ignored data2 specified. method character string indicating correlation coefficient used test. One \"pearson\" (default), \"kendall\", \"spearman\" (see also robust argument), \"biserial\", \"polychoric\", \"tetrachoric\", \"biweight\", \"distance\", \"percentage\" (percentage bend correlation), \"blomqvist\" (Blomqvist's coefficient), \"hoeffding\" (Hoeffding's D), \"gamma\", \"gaussian\" (Gaussian Rank correlation) \"shepherd\" (Shepherd's Pi correlation). Setting \"auto\" attempt selecting relevant method (polychoric ordinal factors involved, tetrachoric dichotomous factors involved, point-biserial one dichotomous one continuous pearson otherwise). See details section description indices. p_adjust Correction method frequentist correlations. Can one \"holm\" (default), \"hochberg\", \"hommel\", \"bonferroni\", \"BH\", \"\", \"fdr\", \"somers\" \"none\". See stats::p.adjust() details. ci Confidence/Credible Interval level. \"default\", set 0.95 (95% CI). bayesian TRUE, run correlations Bayesian framework. bayesian_prior prior argument, several named values recognized: \"medium.narrow\", \"medium\", \"wide\", \"ultrawide\". correspond scale values 1/sqrt(27), 1/3, 1/sqrt(3) 1, respectively. See BayesFactor::correlationBF function. bayesian_ci_method, bayesian_test See arguments model_parameters() BayesFactor tests. redundant data include redundant rows (given correlation repeated two times). include_factors TRUE, factors kept eventually converted numeric used random effects (depending multilevel). FALSE, factors removed upfront. partial Can TRUE \"semi\" partial semi-partial correlations, respectively. partial_bayesian partial correlations Bayesian framework needed, also need set partial_bayesian TRUE obtain \"full\" Bayesian partial correlations. Otherwise, obtain pseudo-Bayesian partial correlations (.e., Bayesian correlation based frequentist partialization). multilevel TRUE, factors included random factors. Else, FALSE (default), included fixed effects simple regression model. ranktransform TRUE, rank-transform variables prior estimating correlation, one way making analysis resistant extreme values (outliers). Note , instance, Pearson's correlation rank-transformed data equivalent Spearman's rank correlation. Thus, using robust=TRUE method=\"spearman\" redundant. Nonetheless, easy option increase robustness correlation well flexible way obtain Bayesian multilevel Spearman-like rank correlations. winsorize Another way making correlation \"robust\" (.e., limiting impact extreme values). Can either FALSE number 0 1 (e.g., 0.2) corresponds desired threshold. See winsorize() function details. verbose Toggle warnings. standardize_names option can set TRUE run insight::standardize_names() output get standardized column names. option can also set globally running options(easystats.standardize_names = TRUE). ... Additional arguments (e.g., alternative) passed methods. See stats::cor.test details.","code":""},{"path":"https://easystats.github.io/correlation/reference/correlation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Correlation Analysis — correlation","text":"correlation object can displayed using print, summary table methods.","code":""},{"path":"https://easystats.github.io/correlation/reference/correlation.html","id":"multiple-tests-correction","dir":"Reference","previous_headings":"","what":"Multiple tests correction","title":"Correlation Analysis — correlation","text":"p_adjust argument can used adjust p-values multiple comparisons. adjustment methods available p.adjust function stats package supported.","code":""},{"path":[]},{"path":"https://easystats.github.io/correlation/reference/correlation.html","id":"correlation-types","dir":"Reference","previous_headings":"","what":"Correlation Types","title":"Correlation Analysis — correlation","text":"Pearson's correlation: common correlation method. corresponds covariance two variables normalized (.e., divided) product standard deviations. Spearman's rank correlation: non-parametric measure rank correlation (statistical dependence rankings two variables). Spearman correlation two variables equal Pearson correlation rank values two variables; Pearson's correlation assesses linear relationships, Spearman's correlation assesses monotonic relationships (whether linear ). Confidence Intervals (CI) Spearman's correlations computed using Fieller et al. (1957) correction (see Bishara Hittner, 2017). Kendall's rank correlation: normal case, Kendall correlation preferred Spearman correlation smaller gross error sensitivity (GES) smaller asymptotic variance (AV), making robust efficient. However, interpretation Kendall's tau less direct Spearman's rho, sense quantifies difference percentage concordant discordant pairs among possible pairwise events. Confidence Intervals (CI) Kendall's correlations computed using Fieller et al. (1957) correction (see Bishara Hittner, 2017). Biweight midcorrelation: measure similarity median-based, instead traditional mean-based, thus less sensitive outliers. can used robust alternative similarity metrics, Pearson correlation (Langfelder & Horvath, 2012). Distance correlation: Distance correlation measures linear non-linear association two random variables random vectors. contrast Pearson's correlation, can detect linear association two random variables. Percentage bend correlation: Introduced Wilcox (1994), based -weight specified percentage marginal observations deviating median (default, 20%). Shepherd's Pi correlation: Equivalent Spearman's rank correlation outliers removal (means bootstrapped Mahalanobis distance). Blomqvist’s coefficient: Blomqvist’s coefficient (also referred Blomqvist's Beta medial correlation; Blomqvist, 1950) median-based non-parametric correlation advantages measures Spearman's Kendall's estimates (see Shmid & Schimdt, 2006). Hoeffding’s D: Hoeffding’s D statistics non-parametric rank based measure association detects general departures independence (Hoeffding 1948), including non-linear associations. Hoeffding’s D varies -0.5 1 (tied ranks, otherwise can lower values), larger values indicating stronger relationship variables. Somers’ D: Somers’ D statistics non-parametric rank based measure association binary variable continuous variable, instance, context logistic regression binary outcome predicted probabilities outcome. Usually, Somers' D measure ordinal association, however, implementation limited case binary outcome. Point-Biserial biserial correlation: Correlation coefficient used one variable continuous dichotomous (binary). Point-Biserial equivalent Pearson's correlation, Biserial used binary variable assumed underlying continuity. example, anxiety level can measured continuous scale, can classified dichotomously high/low. Gamma correlation: Goodman-Kruskal gamma statistic similar Kendall's Tau coefficient. relatively robust outliers deals well data many ties. Winsorized correlation: Correlation variables formerly Winsorized, .e., transformed limiting extreme values reduce effect possibly spurious outliers. Gaussian rank Correlation: Gaussian rank correlation estimator simple well-performing alternative robust rank correlations (Boudt et al., 2012). based Gaussian quantiles ranks. Polychoric correlation: Correlation two theorized normally distributed continuous latent variables, two observed ordinal variables. Tetrachoric correlation: Special case polychoric correlation applicable observed variables dichotomous.","code":""},{"path":"https://easystats.github.io/correlation/reference/correlation.html","id":"partial-correlation","dir":"Reference","previous_headings":"","what":"Partial Correlation","title":"Correlation Analysis — correlation","text":"Partial correlations estimated correlation two variables adjusting (linear) effect one variable. correlation test run partialized dataset, independently . words, considers partialization independent step generating different dataset, rather belonging model. discrepancies expected t- p-values, CIs, BFs etc (correlation coefficient) compared implementations (e.g., ppcor). (size discrepancies depends number covariates partialled-strength linear association variables.) partial correlations can represented Gaussian Graphical Models (GGM), increasingly popular tool psychology. GGM traditionally include set variables depicted circles (\"nodes\"), set lines visualize relationships , thickness represents strength association (see Bhushan et al., 2019). Multilevel correlations special case partial correlations variable adjusted factor included random effect mixed model (note remaining continuous variables dataset still included fixed effects, similarly regular partial correlations). model random intercept model, .e. multilevel correlation adjusted (1 | groupfactor).said, important difference using cor_test() correlation(): set multilevel=TRUE correlation() partial set FALSE (per default), back-transformation partial non-partial correlation attempted (pcor_to_cor()). However, possible using cor_test() set multilevel=TRUE , resulting correlations partial one. Note Bayesian multilevel correlations, partial = FALSE, back transformation also recompute p-values based new r scores, drop Bayes factors (relevant anymore). keep Bayesian scores, set partial = TRUE.","code":""},{"path":"https://easystats.github.io/correlation/reference/correlation.html","id":"notes","dir":"Reference","previous_headings":"","what":"Notes","title":"Correlation Analysis — correlation","text":"Kendall Spearman correlations bayesian=TRUE: technically Pearson Bayesian correlations rank transformed data, rather pure Bayesian rank correlations (different priors).","code":""},{"path":"https://easystats.github.io/correlation/reference/correlation.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Correlation Analysis — correlation","text":"Boudt, K., Cornelissen, J., & Croux, C. (2012). Gaussian rank correlation estimator: robustness properties. Statistics Computing, 22(2), 471-483. Bhushan, N., Mohnert, F., Sloot, D., Jans, L., Albers, C., & Steg, L. (2019). Using Gaussian graphical model explore relationships items variables environmental psychology research. Frontiers psychology, 10, 1050. Bishara, . J., & Hittner, J. B. (2017). Confidence intervals correlations data normal. Behavior research methods, 49(1), 294-309. Fieller, E. C., Hartley, H. O., & Pearson, E. S. (1957). Tests rank correlation coefficients. . Biometrika, 44(3/4), 470-481. Langfelder, P., & Horvath, S. (2012). Fast R functions robust correlations hierarchical clustering. Journal statistical software, 46(11). Blomqvist, N. (1950). measure dependence two random variables,Annals Mathematical Statistics,21, 593–600 Somers, R. H. (1962). new asymmetric measure association ordinal variables. American Sociological Review. 27 (6).","code":""},{"path":"https://easystats.github.io/correlation/reference/correlation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Correlation Analysis — correlation","text":"","code":"library(correlation) results <- correlation(iris)  results #> # Correlation Matrix (pearson-method) #>  #> Parameter1   |   Parameter2 |     r |         95% CI | t(148) |         p #> ------------------------------------------------------------------------- #> Sepal.Length |  Sepal.Width | -0.12 | [-0.27,  0.04] |  -1.44 | 0.152     #> Sepal.Length | Petal.Length |  0.87 | [ 0.83,  0.91] |  21.65 | < .001*** #> Sepal.Length |  Petal.Width |  0.82 | [ 0.76,  0.86] |  17.30 | < .001*** #> Sepal.Width  | Petal.Length | -0.43 | [-0.55, -0.29] |  -5.77 | < .001*** #> Sepal.Width  |  Petal.Width | -0.37 | [-0.50, -0.22] |  -4.79 | < .001*** #> Petal.Length |  Petal.Width |  0.96 | [ 0.95,  0.97] |  43.39 | < .001*** #>  #> p-value adjustment method: Holm (1979) #> Observations: 150 summary(results) #> # Correlation Matrix (pearson-method) #>  #> Parameter    | Petal.Width | Petal.Length | Sepal.Width #> ------------------------------------------------------- #> Sepal.Length |     0.82*** |      0.87*** |       -0.12 #> Sepal.Width  |    -0.37*** |     -0.43*** |             #> Petal.Length |     0.96*** |              |             #>  #> p-value adjustment method: Holm (1979) summary(results, redundant = TRUE) #> # Correlation Matrix (pearson-method) #>  #> Parameter    | Sepal.Length | Sepal.Width | Petal.Length | Petal.Width #> ---------------------------------------------------------------------- #> Sepal.Length |              |       -0.12 |      0.87*** |     0.82*** #> Sepal.Width  |        -0.12 |             |     -0.43*** |    -0.37*** #> Petal.Length |      0.87*** |    -0.43*** |              |     0.96*** #> Petal.Width  |      0.82*** |    -0.37*** |      0.96*** |             #>  #> p-value adjustment method: Holm (1979)  # pipe-friendly usage with  grouped dataframes from {dplyr} package if (require(\"poorman\")) {   iris %>%     correlation(select = \"Petal.Width\", select2 = \"Sepal.Length\")    # Grouped dataframe   # grouped correlations   iris %>%     group_by(Species) %>%     correlation()    # selecting specific variables for correlation   mtcars %>%     group_by(am) %>%     correlation(       select = c(\"cyl\", \"wt\"),       select2 = c(\"hp\")     ) } #> Loading required package: poorman #>  #>   I'd seen my father. He was a poor man, and I watched him do astonishing things. #>     - Sidney Poitier #>  #> Attaching package: ‘poorman’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> # Correlation Matrix (pearson-method) #>  #> Group | Parameter1 | Parameter2 |    r |       95% CI |    t | df |         p #> ----------------------------------------------------------------------------- #> 0     |        cyl |         hp | 0.85 | [0.64, 0.94] | 6.53 | 17 | < .001*** #> 0     |         wt |         hp | 0.68 | [0.33, 0.87] | 3.82 | 17 | 0.001**   #> 1     |        cyl |         hp | 0.90 | [0.69, 0.97] | 6.87 | 11 | < .001*** #> 1     |         wt |         hp | 0.81 | [0.48, 0.94] | 4.66 | 11 | < .001*** #>  #> p-value adjustment method: Holm (1979) #> Observations: 13-19  # supplying custom variable names correlation(anscombe, select = c(\"x1\", \"x2\"), rename = c(\"var1\", \"var2\")) #> # Correlation Matrix (pearson-method) #>  #> Parameter1 | Parameter2 |    r |       95% CI | t(9) |         p #> ---------------------------------------------------------------- #> var1       |       var2 | 1.00 | [1.00, 1.00] |  Inf | < .001*** #>  #> p-value adjustment method: Holm (1979) #> Observations: 11  # automatic selection of correlation method correlation(mtcars[-2], method = \"auto\") #> # Correlation Matrix (auto-method) #>  #> Parameter1 | Parameter2 |     r |         95% CI | t(30) |         p #> -------------------------------------------------------------------- #> mpg        |       disp | -0.85 | [-0.92, -0.71] | -8.75 | < .001*** #> mpg        |         hp | -0.78 | [-0.89, -0.59] | -6.74 | < .001*** #> mpg        |       drat |  0.68 | [ 0.44,  0.83] |  5.10 | < .001*** #> mpg        |         wt | -0.87 | [-0.93, -0.74] | -9.56 | < .001*** #> mpg        |       qsec |  0.42 | [ 0.08,  0.67] |  2.53 | 0.222     #> mpg        |         vs |  0.66 | [ 0.41,  0.82] |  4.86 | < .001*** #> mpg        |         am |  0.60 | [ 0.32,  0.78] |  4.11 | 0.007**   #> mpg        |       gear |  0.48 | [ 0.16,  0.71] |  3.00 | 0.097     #> mpg        |       carb | -0.55 | [-0.75, -0.25] | -3.62 | 0.021*    #> disp       |         hp |  0.79 | [ 0.61,  0.89] |  7.08 | < .001*** #> disp       |       drat | -0.71 | [-0.85, -0.48] | -5.53 | < .001*** #> disp       |         wt |  0.89 | [ 0.78,  0.94] | 10.58 | < .001*** #> disp       |       qsec | -0.43 | [-0.68, -0.10] | -2.64 | 0.197     #> disp       |         vs | -0.71 | [-0.85, -0.48] | -5.53 | < .001*** #> disp       |         am | -0.59 | [-0.78, -0.31] | -4.02 | 0.009**   #> disp       |       gear | -0.56 | [-0.76, -0.26] | -3.66 | 0.020*    #> disp       |       carb |  0.39 | [ 0.05,  0.65] |  2.35 | 0.303     #> hp         |       drat | -0.45 | [-0.69, -0.12] | -2.75 | 0.170     #> hp         |         wt |  0.66 | [ 0.40,  0.82] |  4.80 | 0.001**   #> hp         |       qsec | -0.71 | [-0.85, -0.48] | -5.49 | < .001*** #> hp         |         vs | -0.72 | [-0.86, -0.50] | -5.73 | < .001*** #> hp         |         am | -0.24 | [-0.55,  0.12] | -1.37 | > .999    #> hp         |       gear | -0.13 | [-0.45,  0.23] | -0.69 | > .999    #> hp         |       carb |  0.75 | [ 0.54,  0.87] |  6.21 | < .001*** #> drat       |         wt | -0.71 | [-0.85, -0.48] | -5.56 | < .001*** #> drat       |       qsec |  0.09 | [-0.27,  0.43] |  0.50 | > .999    #> drat       |         vs |  0.44 | [ 0.11,  0.68] |  2.69 | 0.187     #> drat       |         am |  0.71 | [ 0.48,  0.85] |  5.57 | < .001*** #> drat       |       gear |  0.70 | [ 0.46,  0.84] |  5.36 | < .001*** #> drat       |       carb | -0.09 | [-0.43,  0.27] | -0.50 | > .999    #> wt         |       qsec | -0.17 | [-0.49,  0.19] | -0.97 | > .999    #> wt         |         vs | -0.55 | [-0.76, -0.26] | -3.65 | 0.020*    #> wt         |         am | -0.69 | [-0.84, -0.45] | -5.26 | < .001*** #> wt         |       gear | -0.58 | [-0.77, -0.29] | -3.93 | 0.011*    #> wt         |       carb |  0.43 | [ 0.09,  0.68] |  2.59 | 0.205     #> qsec       |         vs |  0.74 | [ 0.53,  0.87] |  6.11 | < .001*** #> qsec       |         am | -0.23 | [-0.54,  0.13] | -1.29 | > .999    #> qsec       |       gear | -0.21 | [-0.52,  0.15] | -1.19 | > .999    #> qsec       |       carb | -0.66 | [-0.82, -0.40] | -4.76 | 0.001**   #> vs         |         am |  0.26 | [-0.09,  0.56] |  1.50 | > .999    #> vs         |       gear |  0.21 | [-0.15,  0.52] |  1.15 | > .999    #> vs         |       carb | -0.57 | [-0.77, -0.28] | -3.80 | 0.015*    #> am         |       gear |  0.79 | [ 0.62,  0.89] |  7.16 | < .001*** #> am         |       carb |  0.06 | [-0.30,  0.40] |  0.32 | > .999    #> gear       |       carb |  0.27 | [-0.08,  0.57] |  1.56 | > .999    #>  #> p-value adjustment method: Holm (1979) #> Observations: 32"},{"path":"https://easystats.github.io/correlation/reference/display.easycormatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Export tables into different output formats — display.easycormatrix","title":"Export tables into different output formats — display.easycormatrix","text":"Export tables (.e. data frame) different output formats. print_md() alias display(format = \"markdown\").","code":""},{"path":"https://easystats.github.io/correlation/reference/display.easycormatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export tables into different output formats — display.easycormatrix","text":"","code":"# S3 method for easycormatrix display(   object,   format = \"markdown\",   digits = 2,   p_digits = 3,   stars = TRUE,   include_significance = NULL,   ... )  # S3 method for easycorrelation print_md(x, digits = NULL, p_digits = NULL, stars = NULL, ...)  # S3 method for easycorrelation print_html(x, digits = NULL, p_digits = NULL, stars = NULL, ...)  # S3 method for easycormatrix print_md(   x,   digits = NULL,   p_digits = NULL,   stars = NULL,   include_significance = NULL,   ... )  # S3 method for easycormatrix print_html(   x,   digits = NULL,   p_digits = NULL,   stars = NULL,   include_significance = NULL,   ... )"},{"path":"https://easystats.github.io/correlation/reference/display.easycormatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export tables into different output formats — display.easycormatrix","text":"object, x object returned correlation() summary. format String, indicating output format. Currently, \"markdown\" supported. digits, p_digits ... stars ... include_significance ... ... Currently used.","code":""},{"path":"https://easystats.github.io/correlation/reference/display.easycormatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export tables into different output formats — display.easycormatrix","text":"character vector. format = \"markdown\", return value character vector markdown-table format.","code":""},{"path":"https://easystats.github.io/correlation/reference/display.easycormatrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Export tables into different output formats — display.easycormatrix","text":"display() useful table-output functions, usually printed formatted text-table console, formatted pretty table-rendering markdown documents, knitted rmarkdown PDF Word files.","code":""},{"path":"https://easystats.github.io/correlation/reference/display.easycormatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export tables into different output formats — display.easycormatrix","text":"","code":"data(iris) corr <- correlation(iris) display(corr) #>  #>  #> Table: Correlation Matrix (pearson-method) #>  #> |Parameter1   |   Parameter2 |     r |         95% CI | t(148) |         p | #> |:------------|:------------:|:-----:|:--------------:|:------:|:---------:| #> |Sepal.Length |  Sepal.Width | -0.12 |  (-0.27, 0.04) |  -1.44 | 0.152     | #> |Sepal.Length | Petal.Length |  0.87 |   (0.83, 0.91) |  21.65 | < .001*** | #> |Sepal.Length |  Petal.Width |  0.82 |   (0.76, 0.86) |  17.30 | < .001*** | #> |Sepal.Width  | Petal.Length | -0.43 | (-0.55, -0.29) |  -5.77 | < .001*** | #> |Sepal.Width  |  Petal.Width | -0.37 | (-0.50, -0.22) |  -4.79 | < .001*** | #> |Petal.Length |  Petal.Width |  0.96 |   (0.95, 0.97) |  43.39 | < .001*** | #> p-value adjustment method: Holm (1979) #> Observations: 150  s <- summary(corr) display(s) #>  #>  #> Table: Correlation Matrix (pearson-method) #>  #> |Parameter    | Petal.Width | Petal.Length | Sepal.Width | #> |:------------|:-----------:|:------------:|:-----------:| #> |Sepal.Length |     0.82*** |      0.87*** |       -0.12 | #> |Sepal.Width  |    -0.37*** |     -0.43*** |             | #> |Petal.Length |     0.96*** |              |             | #> p-value adjustment method: Holm (1979)"},{"path":"https://easystats.github.io/correlation/reference/distance_mahalanobis.html","id":null,"dir":"Reference","previous_headings":"","what":"Mahalanobis distance and confidence interval (CI) — distance_mahalanobis","title":"Mahalanobis distance and confidence interval (CI) — distance_mahalanobis","text":"Mahalanobis distance (squared units) measures distance multivariate space taking account covariance structure data. extreme outliers can skew covariance estimate, bootstrapped version considered robust.","code":""},{"path":"https://easystats.github.io/correlation/reference/distance_mahalanobis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mahalanobis distance and confidence interval (CI) — distance_mahalanobis","text":"","code":"distance_mahalanobis(data, ci = 0.95, iterations = 1000, robust = TRUE, ...)"},{"path":"https://easystats.github.io/correlation/reference/distance_mahalanobis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mahalanobis distance and confidence interval (CI) — distance_mahalanobis","text":"data data frame. ci Confidence/Credible Interval level. \"default\", set 0.95 (95% CI). iterations number draws simulate/bootstrap (robust TRUE). robust TRUE, run bootstrapped version function iterations. ... Additional arguments (e.g., alternative) passed methods. See stats::cor.test details.","code":""},{"path":"https://easystats.github.io/correlation/reference/distance_mahalanobis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mahalanobis distance and confidence interval (CI) — distance_mahalanobis","text":"Description Mahalanobis distance.","code":""},{"path":"https://easystats.github.io/correlation/reference/distance_mahalanobis.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Mahalanobis distance and confidence interval (CI) — distance_mahalanobis","text":"Schwarzkopf, D. S., De Haas, B., & Rees, G. (2012). Better ways improve standards brain-behavior correlation analysis. Frontiers human neuroscience, 6, 200.","code":""},{"path":"https://easystats.github.io/correlation/reference/distance_mahalanobis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mahalanobis distance and confidence interval (CI) — distance_mahalanobis","text":"","code":"library(correlation)  distance_mahalanobis(iris[, 1:4]) #>       Distance     CI_low    CI_high #> 1    2.1799257  1.5773870  3.0103486 #> 2    2.9457730  2.3046996  3.8828547 #> 3    2.1506407  1.6440310  2.8116164 #> 4    2.5325294  1.9934572  3.1978815 #> 5    2.5149781  1.8429525  3.4760443 #> 6    3.9657247  2.8747144  5.5103717 #> 7    2.9468683  2.3332488  3.7177751 #> 8    1.8639158  1.3581406  2.5804917 #> 9    3.4860917  2.7892251  4.4468571 #> 10   2.4537735  1.9908618  3.0547983 #> 11   3.3593890  2.4788184  4.5718910 #> 12   2.8425693  2.2178004  3.7292085 #> 13   2.6983058  2.1681400  3.4196374 #> 14   3.7166666  2.9815346  4.7338636 #> 15   8.9733668  6.9708260 11.9545950 #> 16   9.9467263  7.5362396 13.5663960 #> 17   5.9252088  4.4518350  7.9317621 #> 18   2.3806662  1.7136078  3.2424768 #> 19   4.6051144  3.4715641  6.1756659 #> 20   3.5271295  2.5660489  4.7947835 #> 21   2.7095779  2.1436978  3.4677051 #> 22   3.0207706  2.2606950  4.0804981 #> 23   3.7161789  2.9324896  4.7178055 #> 24   2.3238096  1.7628059  3.0206115 #> 25   5.4564414  4.3089571  6.9408854 #> 26   2.5281342  2.0042669  3.2341170 #> 27   1.8236534  1.3220168  2.4441207 #> 28   2.2489952  1.6362501  3.1051852 #> 29   2.5718080  1.9275503  3.4438628 #> 30   2.5366374  2.0151761  3.2479897 #> 31   2.0484693  1.6171286  2.6332832 #> 32   4.7269491  3.6902651  6.1724441 #> 33   8.5706975  6.5729874 11.4608677 #> 34   7.3877677  5.4255431 10.1158148 #> 35   2.0456671  1.5874368  2.6487812 #> 36   3.5345338  2.7605900  4.5041415 #> 37   5.4766686  4.2969839  7.1212419 #> 38   3.5109163  2.7042975  4.6763822 #> 39   3.2554156  2.5915287  4.1815463 #> 40   1.9387146  1.4089449  2.6520777 #> 41   2.6194170  1.9217755  3.4828131 #> 42  11.7863614  9.0524054 15.9592502 #> 43   3.4032997  2.7288752  4.2629712 #> 44   3.8613772  3.0829856  4.8962542 #> 45   4.5899426  3.5320543  6.1570303 #> 46   3.0839026  2.3792953  4.0878210 #> 47   4.5390887  3.4487699  6.0829001 #> 48   2.4261806  1.8840887  3.0705580 #> 49   3.0771802  2.2221812  4.2418618 #> 50   1.9844633  1.4656127  2.6795897 #> 51   4.6103747  3.4019005  6.4394240 #> 52   0.6795722  0.3993739  1.1149686 #> 53   3.1385767  2.2108964  4.4885294 #> 54   3.7089710  2.7614747  5.1227956 #> 55   2.1417018  1.4924896  2.9460511 #> 56   3.4191000  2.5024700  4.7291669 #> 57   1.3337254  0.8921796  2.0298744 #> 58   4.4519711  3.4653356  5.8913695 #> 59   2.8588760  2.0204329  3.9975087 #> 60   3.2781633  2.4975026  4.3280488 #> 61   7.8657602  6.1755701 10.7237504 #> 62   0.4634968  0.2412206  0.8462517 #> 63   7.7951035  6.0822511 10.4612180 #> 64   1.6243704  1.0611169  2.3701588 #> 65   1.0979633  0.7404738  1.5850582 #> 66   2.9081570  2.1142886  3.9782032 #> 67   3.5697116  2.7221373  4.8031296 #> 68   3.4848933  2.5567223  4.6120142 #> 69   7.6337844  5.9229366 10.3117740 #> 70   2.2568148  1.7241945  3.1318394 #> 71   3.3399420  2.4995800  4.6342052 #> 72   1.4377535  0.9734630  2.0381354 #> 73   2.4822089  1.8510260  3.3918806 #> 74   4.7215866  3.4291262  6.4250734 #> 75   1.6871957  1.1647610  2.4047316 #> 76   2.4333109  1.7476934  3.3402083 #> 77   4.3477249  3.2152190  5.8734513 #> 78   1.4977659  1.0007638  2.1906052 #> 79   0.3505193  0.1940155  0.5911341 #> 80   2.1828667  1.5605978  3.1522768 #> 81   2.8970522  2.2108942  4.1065785 #> 82   3.2252676  2.5104168  4.4954895 #> 83   0.8946361  0.5780441  1.3792865 #> 84   2.6070842  1.8954132  3.5635743 #> 85   6.3672633  5.0056520  8.3313371 #> 86   2.8859615  2.1742314  3.9165958 #> 87   1.8885087  1.2579573  2.7675367 #> 88   6.7902462  5.2552853  9.0728594 #> 89   1.7205175  1.2510007  2.4306643 #> 90   2.0705182  1.5347413  2.8800558 #> 91   5.1196048  3.7689186  6.8182929 #> 92   1.2482461  0.7971880  1.9012722 #> 93   1.4223322  1.0050514  2.0875850 #> 94   4.6913453  3.6062317  6.4101863 #> 95   1.5390349  1.1118849  2.1755078 #> 96   2.7850354  2.0136190  3.8482516 #> 97   1.2315192  0.8267786  1.7900246 #> 98   0.6995785  0.4090891  1.1344064 #> 99   5.0108885  3.7790722  6.9124190 #> 100  0.6664748  0.4326780  1.0263171 #> 101  9.2167262  7.0241954 12.6455407 #> 102  3.0545212  2.2656583  4.2152310 #> 103  2.5528745  1.8657537  3.5992210 #> 104  3.6633128  2.7639567  5.0483745 #> 105  2.4199144  1.7850948  3.4720458 #> 106  6.2758011  4.3896455  9.0527586 #> 107 10.4283920  8.2588373 13.5355346 #> 108  7.8433733  5.5149611 11.2300189 #> 109  3.4507908  2.6234843  4.7155419 #> 110  7.5958448  5.8313491 10.3446979 #> 111  2.3581056  1.5323609  3.6330723 #> 112  1.2937694  0.9593935  1.7619268 #> 113  2.5345987  1.7391990  3.6917365 #> 114  4.9581509  3.7979295  6.5503092 #> 115 11.8992951  9.1121328 16.0189385 #> 116  6.0823693  4.2713160  8.8965472 #> 117  2.0594187  1.4496197  3.0461121 #> 118 13.2696773  9.4820869 18.6290587 #> 119  7.4320882  5.5369120  9.9030779 #> 120  4.5449746  3.6096666  6.0258058 #> 121  4.2268802  2.9661346  6.1397664 #> 122  5.5093273  4.1865019  7.6816461 #> 123  9.0567039  6.5989927 12.8951083 #> 124  1.8808572  1.2963700  2.6404897 #> 125  2.9973252  2.2366152  4.1131613 #> 126  6.1232314  4.1470755  9.1355574 #> 127  1.5230020  1.0234961  2.2688884 #> 128  1.1781381  0.7641689  1.8479766 #> 129  1.7208109  1.2884941  2.4721891 #> 130  7.3306051  5.1483852 10.6412573 #> 131  5.9093631  4.3043252  8.2184180 #> 132 13.5974973  9.6815290 19.3457802 #> 133  2.6342064  1.8908162  3.8209506 #> 134  2.5188442  1.7253452  3.5982089 #> 135 13.4120791 10.0547728 17.8589032 #> 136  9.9872352  7.7519099 13.0973162 #> 137  8.4583659  6.3042611 11.8586293 #> 138  3.3586717  2.5153312  4.7485015 #> 139  1.5181257  0.9981914  2.3454767 #> 140  3.6351981  2.5744357  5.2238943 #> 141  6.2109366  4.3027920  9.0383628 #> 142 12.9498425  9.5390412 18.0879774 #> 143  3.0545212  2.2656583  4.2152310 #> 144  3.2139728  2.3500017  4.6364718 #> 145  7.7268304  5.4827588 11.1987243 #> 146  9.4445209  6.8135843 13.2949493 #> 147  4.2241636  3.1034430  5.6236597 #> 148  1.8589921  1.1960484  2.8909660 #> 149  7.9258215  5.8949569 11.0687071 #> 150  3.5667623  2.7057995  4.8361518 distance_mahalanobis(iris[, 1:4], robust = FALSE) #>       Distance #> 1    2.1344679 #> 2    2.8491187 #> 3    2.0813387 #> 4    2.4523816 #> 5    2.4621545 #> 6    3.8834177 #> 7    2.8621081 #> 8    1.8333003 #> 9    3.3840731 #> 10   2.3752179 #> 11   3.2831069 #> 12   2.7747975 #> 13   2.6132975 #> 14   3.6034324 #> 15   8.7375184 #> 16   9.7127899 #> 17   5.7605877 #> 18   2.3213894 #> 19   4.4996899 #> 20   3.4388658 #> 21   2.6360071 #> 22   2.9292496 #> 23   3.6134114 #> 24   2.2371731 #> 25   5.3023607 #> 26   2.4453103 #> 27   1.7658286 #> 28   2.1971806 #> 29   2.5027712 #> 30   2.4643980 #> 31   1.9849638 #> 32   4.5911380 #> 33   8.3583413 #> 34   7.2213139 #> 35   1.9820679 #> 36   3.4173031 #> 37   5.3372175 #> 38   3.4513350 #> 39   3.1549793 #> 40   1.8926197 #> 41   2.5485013 #> 42  11.4240288 #> 43   3.3144697 #> 44   3.7085855 #> 45   4.4840560 #> 46   2.9786602 #> 47   4.4333077 #> 48   2.3594309 #> 49   3.0076970 #> 50   1.9285641 #> 51   4.4528311 #> 52   0.6273996 #> 53   3.0186280 #> 54   3.6125278 #> 55   2.0404590 #> 56   3.3195858 #> 57   1.2763441 #> 58   4.3093305 #> 59   2.7426578 #> 60   3.1665229 #> 61   7.6832930 #> 62   0.4323176 #> 63   7.5614023 #> 64   1.5482870 #> 65   1.0372548 #> 66   2.7865631 #> 67   3.4732716 #> 68   3.3289796 #> 69   7.3923779 #> 70   2.1837666 #> 71   3.2615033 #> 72   1.3601100 #> 73   2.3885294 #> 74   4.5073307 #> 75   1.6095193 #> 76   2.3362612 #> 77   4.1982905 #> 78   1.4219664 #> 79   0.3194730 #> 80   2.1112223 #> 81   2.8147732 #> 82   3.1338323 #> 83   0.8579871 #> 84   2.5178289 #> 85   6.2164814 #> 86   2.7910313 #> 87   1.7971852 #> 88   6.5544318 #> 89   1.6677135 #> 90   2.0056841 #> 91   4.9630348 #> 92   1.1821941 #> 93   1.3713881 #> 94   4.5698858 #> 95   1.4932609 #> 96   2.6869276 #> 97   1.1870542 #> 98   0.6575354 #> 99   4.8207427 #> 100  0.6341019 #> 101  8.9395988 #> 102  2.9682833 #> 103  2.4451456 #> 104  3.5551146 #> 105  2.3541837 #> 106  6.0617111 #> 107 10.1378044 #> 108  7.5880086 #> 109  3.3301655 #> 110  7.3453376 #> 111  2.2611037 #> 112  1.2342978 #> 113  2.4316524 #> 114  4.7588845 #> 115 11.4105735 #> 116  5.8815414 #> 117  1.9743869 #> 118 12.8130732 #> 119  7.1768159 #> 120  4.3974981 #> 121  4.0399248 #> 122  5.3595987 #> 123  8.7973122 #> 124  1.7967966 #> 125  2.8868280 #> 126  5.8835660 #> 127  1.4473698 #> 128  1.1348285 #> 129  1.6688603 #> 130  7.0710485 #> 131  5.6935238 #> 132 13.1010925 #> 133  2.5441171 #> 134  2.4087367 #> 135 12.8803310 #> 136  9.6569355 #> 137  8.2028004 #> 138  3.2575803 #> 139  1.4687445 #> 140  3.4924068 #> 141  5.9713581 #> 142 12.4413843 #> 143  2.9682833 #> 144  3.1069367 #> 145  7.4592052 #> 146  9.0639497 #> 147  4.0366487 #> 148  1.7670035 #> 149  7.6824724 #> 150  3.4787688"},{"path":"https://easystats.github.io/correlation/reference/is.cor.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if matrix ressembles a correlation matrix — is.cor","title":"Check if matrix ressembles a correlation matrix — is.cor","text":"Check matrix ressembles correlation matrix","code":""},{"path":"https://easystats.github.io/correlation/reference/is.cor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if matrix ressembles a correlation matrix — is.cor","text":"","code":"is.cor(x)"},{"path":"https://easystats.github.io/correlation/reference/is.cor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if matrix ressembles a correlation matrix — is.cor","text":"x matrix.","code":""},{"path":"https://easystats.github.io/correlation/reference/is.cor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if matrix ressembles a correlation matrix — is.cor","text":"TRUE matrix correlation matrix FALSE otherwise.","code":""},{"path":"https://easystats.github.io/correlation/reference/isSquare.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if Square Matrix — isSquare","title":"Check if Square Matrix — isSquare","text":"Check Square Matrix","code":""},{"path":"https://easystats.github.io/correlation/reference/isSquare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if Square Matrix — isSquare","text":"","code":"isSquare(m)"},{"path":"https://easystats.github.io/correlation/reference/isSquare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if Square Matrix — isSquare","text":"m matrix.","code":""},{"path":"https://easystats.github.io/correlation/reference/isSquare.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if Square Matrix — isSquare","text":"TRUE matrix square FALSE otherwise.","code":""},{"path":"https://easystats.github.io/correlation/reference/matrix_inverse.html","id":null,"dir":"Reference","previous_headings":"","what":"Matrix Inversion — matrix_inverse","title":"Matrix Inversion — matrix_inverse","text":"Performs Moore-Penrose generalized inverse (also called Pseudoinverse).","code":""},{"path":"https://easystats.github.io/correlation/reference/matrix_inverse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Matrix Inversion — matrix_inverse","text":"","code":"matrix_inverse(m, tol = .Machine$double.eps^(2/3))"},{"path":"https://easystats.github.io/correlation/reference/matrix_inverse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Matrix Inversion — matrix_inverse","text":"m Matrix inverse required. tol Relative tolerance detect zero singular values.","code":""},{"path":"https://easystats.github.io/correlation/reference/matrix_inverse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Matrix Inversion — matrix_inverse","text":"inversed matrix.","code":""},{"path":[]},{"path":"https://easystats.github.io/correlation/reference/matrix_inverse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Matrix Inversion — matrix_inverse","text":"","code":"m <- cor(iris[1:4]) matrix_inverse(m) #>              Sepal.Length Sepal.Width Petal.Length Petal.Width #> Sepal.Length     7.072722   -2.422965   -10.692191    3.622961 #> Sepal.Width     -2.422965    2.100872     4.986386   -2.050192 #> Petal.Length   -10.692191    4.986386    31.261498  -19.529388 #> Petal.Width      3.622961   -2.050192   -19.529388   16.090175"},{"path":"https://easystats.github.io/correlation/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. bayestestR simulate_simpson datawizard visualisation_recipe insight display, print_html, print_md, standardize_names","code":""},{"path":"https://easystats.github.io/correlation/reference/visualisation_recipe.easycormatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualisation Recipe for 'correlation' Objects — visualisation_recipe.easycor_test","title":"Visualisation Recipe for 'correlation' Objects — visualisation_recipe.easycor_test","text":"Objects correlation package can easily visualized. can simply run plot() , internally call visualisation_recipe() method produce basic ggplot. can customize plot ad-hoc via arguments described . See examples .","code":""},{"path":"https://easystats.github.io/correlation/reference/visualisation_recipe.easycormatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualisation Recipe for 'correlation' Objects — visualisation_recipe.easycor_test","text":"","code":"# S3 method for easycor_test visualisation_recipe(   x,   show_data = \"point\",   show_text = \"subtitle\",   smooth = NULL,   point = NULL,   text = NULL,   labs = NULL,   ... )  # S3 method for easycormatrix visualisation_recipe(   x,   show_data = \"tile\",   show_text = \"text\",   show_legend = TRUE,   tile = NULL,   point = NULL,   text = NULL,   scale = NULL,   scale_fill = NULL,   labs = NULL,   type = show_data,   ... )  # S3 method for easycorrelation visualisation_recipe(x, ...)"},{"path":"https://easystats.github.io/correlation/reference/visualisation_recipe.easycormatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualisation Recipe for 'correlation' Objects — visualisation_recipe.easycor_test","text":"x correlation object. show_data Show data. correlation matrices, can \"tile\" (default) \"point\". show_text Show labels matrix values. ... arguments passed functions. show_legend Show legend. Can set FALSE remove legend. tile, point, text, scale, scale_fill, smooth, labs Additional aesthetics parameters geoms (see customization example). type Alias show_data, backwards compatibility.","code":""},{"path":"https://easystats.github.io/correlation/reference/visualisation_recipe.easycormatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualisation Recipe for 'correlation' Objects — visualisation_recipe.easycor_test","text":"","code":"# \\donttest{ # ============================================== # Correlation Test # ============================================== if (require(\"see\")) {   rez <- cor_test(mtcars, \"mpg\", \"wt\")    layers <- visualisation_recipe(rez, labs = list(x = \"Miles per Gallon (mpg)\"))   layers   plot(layers)    plot(rez,     show_text = \"label\",     point = list(color = \"#f44336\"),     text = list(fontface = \"bold\"),     show_statistic = FALSE, show_ci = FALSE, stars = TRUE   ) } #> Loading required package: see  # } # ============================================== # Correlation Matrix # ============================================== if (require(\"see\")) {   rez <- correlation(mtcars)    x <- cor_sort(as.matrix(rez))   layers <- visualisation_recipe(x)   layers   plot(layers)    #' Get more details using `summary()`   x <- summary(rez, redundant = TRUE, digits = 3)   plot(visualisation_recipe(x))    # Customize   x <- summary(rez)   layers <- visualisation_recipe(x,     show_data = \"points\",     scale = list(range = c(10, 20)),     scale_fill = list(       high = \"#FF5722\",       low = \"#673AB7\",       name = \"r\"     ),     text = list(color = \"white\"),     labs = list(title = \"My Plot\")   )   plot(layers) + theme_modern() }  # \\donttest{ # ============================================== # Correlation Results (easycorrelation) # ============================================== if (require(\"see\") && require(\"tidygraph\") && require(\"ggraph\")) {   rez <- correlation(iris)    layers <- visualisation_recipe(rez)   layers   plot(layers) } #> Loading required package: tidygraph #>  #> Attaching package: ‘tidygraph’ #> The following objects are masked from ‘package:poorman’: #>  #>     %>%, anti_join, arrange, contains, distinct, ends_with, everything, #>     filter, full_join, group_by, group_data, group_indices, group_keys, #>     group_size, group_vars, groups, inner_join, left_join, matches, #>     mutate, n, n_groups, num_range, pull, rename, right_join, select, #>     semi_join, slice, starts_with, transmute, ungroup #> The following object is masked from ‘package:stats’: #>  #>     filter #> Loading required package: ggraph  # }"},{"path":"https://easystats.github.io/correlation/reference/z_fisher.html","id":null,"dir":"Reference","previous_headings":"","what":"Fisher z-transformation — z_fisher","title":"Fisher z-transformation — z_fisher","text":"Fisher z-transformation converts standard Pearson's r normally distributed variable z'. used compute confidence intervals correlations. z' variable different z-statistic.","code":""},{"path":"https://easystats.github.io/correlation/reference/z_fisher.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fisher z-transformation — z_fisher","text":"","code":"z_fisher(r = NULL, z = NULL)"},{"path":"https://easystats.github.io/correlation/reference/z_fisher.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fisher z-transformation — z_fisher","text":"r, z r z' value converted.","code":""},{"path":"https://easystats.github.io/correlation/reference/z_fisher.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fisher z-transformation — z_fisher","text":"transformed value.","code":""},{"path":"https://easystats.github.io/correlation/reference/z_fisher.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fisher z-transformation — z_fisher","text":"Zar, J.H., (2014). Spearman Rank Correlation: Overview. Wiley StatsRef: Statistics Reference Online. doi:10.1002/9781118445112.stat05964","code":""},{"path":"https://easystats.github.io/correlation/reference/z_fisher.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fisher z-transformation — z_fisher","text":"","code":"z_fisher(r = 0.7) #> [1] 0.8673005 z_fisher(z = 0.867) #> [1] 0.6998467"},{"path":"https://easystats.github.io/correlation/news/index.html","id":"correlation-08x","dir":"Changelog","previous_headings":"","what":"correlation 0.8.x","title":"correlation 0.8.x","text":"visualization recipe (plots) redundant correlation matrices improved, self-correlations longer labelled get neutral color. print() method redundant correlation matrices longer shows diagonal self-correlations.","code":""},{"path":"https://easystats.github.io/correlation/news/index.html","id":"correlation-082","dir":"Changelog","previous_headings":"","what":"correlation 0.8.2","title":"correlation 0.8.2","text":"CRAN release: 2022-08-09 Maintenance release datawizard package update.","code":""},{"path":"https://easystats.github.io/correlation/news/index.html","id":"correlation-081","dir":"Changelog","previous_headings":"","what":"correlation 0.8.1","title":"correlation 0.8.1","text":"CRAN release: 2022-05-20 Maintenance release datawizard package update.","code":""},{"path":"https://easystats.github.io/correlation/news/index.html","id":"correlation-080","dir":"Changelog","previous_headings":"","what":"correlation 0.8.0","title":"correlation 0.8.0","text":"CRAN release: 2022-02-14","code":""},{"path":"https://easystats.github.io/correlation/news/index.html","id":"breaking-changes-0-8-0","dir":"Changelog","previous_headings":"","what":"Breaking Changes","title":"correlation 0.8.0","text":"robust argument, deprecated favour ranktransform 0.6.1 release, now removed.","code":""},{"path":"https://easystats.github.io/correlation/news/index.html","id":"correlation-071","dir":"Changelog","previous_headings":"","what":"correlation 0.7.1","title":"correlation 0.7.1","text":"CRAN release: 2021-10-06","code":""},{"path":"https://easystats.github.io/correlation/news/index.html","id":"bug-fixes-0-7-1","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"correlation 0.7.1","text":"Bug fix plot() methods","code":""},{"path":"https://easystats.github.io/correlation/news/index.html","id":"correlation-070","dir":"Changelog","previous_headings":"","what":"correlation 0.7.0","title":"correlation 0.7.0","text":"CRAN release: 2021-09-05","code":""},{"path":"https://easystats.github.io/correlation/news/index.html","id":"breaking-changes-0-7-0","dir":"Changelog","previous_headings":"","what":"Breaking Changes","title":"correlation 0.7.0","text":"Removes winsorize() function, now lives datawizard package.","code":""},{"path":"https://easystats.github.io/correlation/news/index.html","id":"new-features-0-7-0","dir":"Changelog","previous_headings":"","what":"New Features","title":"correlation 0.7.0","text":"New cor_smooth() function smoothing non-positive definite matrices.","code":""},{"path":"https://easystats.github.io/correlation/news/index.html","id":"bug-fixes-0-7-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"correlation 0.7.0","text":"data2 specified correlation() -correcting combinations variables full x y tables, rather just ones specified (#195).","code":""},{"path":"https://easystats.github.io/correlation/news/index.html","id":"minor-changes-0-7-0","dir":"Changelog","previous_headings":"","what":"Minor Changes","title":"correlation 0.7.0","text":"correlation() gains new argument rename rename variables. simualte_simpson() function now re-exported bayestestR package. plot() \"easycor_test\" objects now produces annotated scatter plot.","code":""},{"path":"https://easystats.github.io/correlation/news/index.html","id":"correlation-061","dir":"Changelog","previous_headings":"","what":"correlation 0.6.1","title":"correlation 0.6.1","text":"CRAN release: 2021-04-09","code":""},{"path":"https://easystats.github.io/correlation/news/index.html","id":"breaking-changes-0-6-1","dir":"Changelog","previous_headings":"","what":"Breaking Changes","title":"correlation 0.6.1","text":"simualte_simpson(): groups now named pattern \"G_\" (can altered group_prefix argument). robust argument deprecated favour ranktransform.","code":""},{"path":"https://easystats.github.io/correlation/news/index.html","id":"new-features-0-6-1","dir":"Changelog","previous_headings":"","what":"New Features","title":"correlation 0.6.1","text":"correlation gains two new arguments: select select2 select specific variables dataframes compare (#146). .matrix method works grouped correlations (#148). New .list method returns list various matrices related correlation analysis (correlation, number observations, p-values, etc.).","code":""},{"path":"https://easystats.github.io/correlation/news/index.html","id":"bug-fixes-0-6-1","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"correlation 0.6.1","text":"0.6.0 release introduced bug Winsorized Pearson correlation missing values removed entire data, instead pair (#151). now fixed.","code":""},{"path":"https://easystats.github.io/correlation/news/index.html","id":"correlation-060","dir":"Changelog","previous_headings":"","what":"correlation 0.6.0","title":"correlation 0.6.0","text":"CRAN release: 2021-02-12","code":""},{"path":"https://easystats.github.io/correlation/news/index.html","id":"new-features-0-6-0","dir":"Changelog","previous_headings":"","what":"New Features","title":"correlation 0.6.0","text":"Added verbose arguments functions, toggle warnings /. cor_test() (hence, correlation()) now default winsorize argument .1 ’s set TRUE. Method column output dataframe now explicit correlation method used.","code":""},{"path":"https://easystats.github.io/correlation/news/index.html","id":"bug-fixes-0-6-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"correlation 0.6.0","text":"Winsorization doesn’t fail NAs present (#130).","code":""},{"path":"https://easystats.github.io/correlation/news/index.html","id":"minor-changes-0-6-0","dir":"Changelog","previous_headings":"","what":"Minor Changes","title":"correlation 0.6.0","text":"Fixed CRAN check issues due changes dependent packages.","code":""},{"path":"https://easystats.github.io/correlation/news/index.html","id":"correlation-050","dir":"Changelog","previous_headings":"","what":"correlation 0.5.0","title":"correlation 0.5.0","text":"CRAN release: 2020-12-02","code":""},{"path":"https://easystats.github.io/correlation/news/index.html","id":"changes-0-5-0","dir":"Changelog","previous_headings":"","what":"Changes","title":"correlation 0.5.0","text":"Added winsorize() function. Added winsorize argument Winsorized correlations. Added method = \"somers\" correlation(), compute Somers’s Dxy rank correlation binary outcomes. New function display(), print output different formats. Currently, markdown supported. print_md() alias display(format =   \"markdown\").","code":""},{"path":"https://easystats.github.io/correlation/news/index.html","id":"bug-fixes-0-5-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"correlation 0.5.0","text":"Fix bug cor_to_p() gave slightly different test statistics.","code":""},{"path":"https://easystats.github.io/correlation/news/index.html","id":"correlation-040","dir":"Changelog","previous_headings":"","what":"correlation 0.4.0","title":"correlation 0.4.0","text":"CRAN release: 2020-09-27","code":""},{"path":"https://easystats.github.io/correlation/news/index.html","id":"changes-0-4-0","dir":"Changelog","previous_headings":"","what":"Changes","title":"correlation 0.4.0","text":"Don’t error less 3 valid observations (#100). Add “gaussian” rank method. Add “gamma” method. Add “hoeffding” method. Add “blomqvist” method.","code":""},{"path":"https://easystats.github.io/correlation/news/index.html","id":"bug-fixes-0-4-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"correlation 0.4.0","text":"Added Method column Bayesian correlations. Fix bug robust=TRUE (#87).","code":""},{"path":"https://easystats.github.io/correlation/news/index.html","id":"correlation-030","dir":"Changelog","previous_headings":"","what":"correlation 0.3.0","title":"correlation 0.3.0","text":"CRAN release: 2020-06-19","code":""},{"path":[]},{"path":[]},{"path":"https://easystats.github.io/correlation/news/index.html","id":"correlation-021","dir":"Changelog","previous_headings":"","what":"correlation 0.2.1","title":"correlation 0.2.1","text":"CRAN release: 2020-05-05","code":""},{"path":"https://easystats.github.io/correlation/news/index.html","id":"changes-0-2-1","dir":"Changelog","previous_headings":"","what":"Changes","title":"correlation 0.2.1","text":"Added confidence intervals CI support Spearman Kendall (#80) Improved documentation (#45, #63)","code":""},{"path":"https://easystats.github.io/correlation/news/index.html","id":"bug-fixes-0-2-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"correlation 0.2.1","text":"Removed CI threshold column distance_mahalanobis() Fixed bug (#76)","code":""},{"path":"https://easystats.github.io/correlation/news/index.html","id":"correlation-020","dir":"Changelog","previous_headings":"","what":"correlation 0.2.0","title":"correlation 0.2.0","text":"CRAN release: 2020-04-09","code":""},{"path":"https://easystats.github.io/correlation/news/index.html","id":"changes-0-2-0","dir":"Changelog","previous_headings":"","what":"Changes","title":"correlation 0.2.0","text":"changes made.","code":""},{"path":"https://easystats.github.io/correlation/news/index.html","id":"bug-fixes-0-2-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"correlation 0.2.0","text":"bugs fixed.","code":""},{"path":"https://easystats.github.io/correlation/news/index.html","id":"correlation-010","dir":"Changelog","previous_headings":"","what":"correlation 0.1.0","title":"correlation 0.1.0","text":"CRAN release: 2020-03-16","code":""},{"path":"https://easystats.github.io/correlation/news/index.html","id":"changes-0-1-0","dir":"Changelog","previous_headings":"","what":"Changes","title":"correlation 0.1.0","text":"Initial CRAN release. Add plot()-method summary().","code":""},{"path":"https://easystats.github.io/correlation/news/index.html","id":"bug-fixes-0-1-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"correlation 0.1.0","text":"Fixed issue correlation() edge cases include_factors =   TRUE. Fixed issue correlation() correlation coefficients less four complete pairs observations (cases, cor_test() now returns NA confidence intervals).","code":""}]
